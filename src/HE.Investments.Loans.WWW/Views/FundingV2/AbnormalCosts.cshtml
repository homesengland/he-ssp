@model HE.Investments.Loans.Contract.Funding.FundingViewModel
@using HE.Investments.Common.Gds
@using HE.Investments.Common.WWW.Extensions
@using HE.Investments.Loans.Contract.Funding
@using HE.Investments.Loans.Contract.Funding.Enums
@using HE.Investments.Loans.WWW.Extensions
@using HE.Investments.Loans.WWW.Views.FundingV2.Consts
@inject ModelExpressionProvider ModelProvider
@{
    var (radioInvalid, radioErrors) = ViewData.ModelState.GetErrors(ModelProvider.GetExpressionText((FundingViewModel x) => x.AbnormalCosts));
    var (conditionalInputInvalid, inputErrors) = ViewData.ModelState.GetErrors(ModelProvider.GetExpressionText((FundingViewModel x) => x.AbnormalCostsInfo));
}

<gds-div-grid-column-two-thirds>
    <he-organisation-form asp-controller="FundingV2" asp-action="AbnormalCostsPost" asp-route-id="@Model.LoanApplicationId" asp-route-redirect="@Context.Request.Query["redirect"]" asp-method="post" novalidate>
        <vc:loans-workflow-back-button current-page="@FundingState.AbnormalCosts"/>

        <partial name="_ErrorSummaryPartial" model="null" />
        <gds-field-set>
            <gds-div-form-group invalid="radioInvalid">
                <gds-legend size="ControlSize.L">
                    <gds-fieldset-heading>
                        @FundingPageTitles.AbnormalCosts
                    </gds-fieldset-heading>
                </gds-legend>
                <gds-div-hint class="govuk-!-margin-bottom-8">
                    Abnormal costs are additional or unusual costs that you might face when developing a site. This could include removal of Japanese Knotweed and the remediation of ground contamination.
                </gds-div-hint>
                @if (radioInvalid)
                {
                    <p class="govuk-error-message">
                        <span class="govuk-visually-hidden">Error:</span> @radioErrors
                    </p>
                }
                <gds-radio-yes-no asp-for="AbnormalCosts"
                                  inner-input-for="AbnormalCostsInfo"
                                  with-yes-input
                                  inner-input-text="Tell us about any abnormal costs this project has."
                                  inner-input-value="@Model.AbnormalCostsInfo"
                                  class="govuk-!-margin-bottom-8"
                                  value="@Model.AbnormalCosts"
                                  is-conditional-input-invalid="conditionalInputInvalid"
                                  conditional-input-error="@inputErrors">
                </gds-radio-yes-no>
            </gds-div-form-group>
            <vc:loans-form-button value="@(Model.StateChanged ? "Change" : "Continue")"/>
        </gds-field-set>
    </he-organisation-form>

    <partial name="_HomeAndCheckAnswersLinks" />
</gds-div-grid-column-two-thirds>

@await Html.YesNoConditionalInputScript(ModelProvider.GetExpressionText((FundingViewModel x) => x.AbnormalCosts))
