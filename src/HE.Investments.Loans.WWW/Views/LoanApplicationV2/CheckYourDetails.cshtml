@using HE.Investments.Loans.BusinessLogic.LoanApplication
@model HE.Investments.Loans.WWW.Models.CheckYourDetailsModel
@{
    var fdProjectId = Context.Request.Query["fdProjectId"];
    var organisationId = Context.Request.RouteValues["organisationId"]?.ToString();
    var callback = string.IsNullOrWhiteSpace(fdProjectId)
        ? $"/{organisationId}/application/check-your-details"
        : $"/{organisationId}/application/check-your-details?fdProjectId={fdProjectId}";
}

<gds-div-grid-column-two-thirds>
    <he-organisation-form asp-controller="LoanApplicationV2" asp-action="CheckYourDetailsPost" asp-method="post" asp-route-fdProjectId="@fdProjectId" novalidate>
        <vc:loans-workflow-back-button current-page="@LoanApplicationWorkflow.State.CheckYourDetails"/>

        <vc:page-header title="Check your details"/>

        <gds-summary-list class="govuk-!-margin-bottom-9">
            @await Html.PartialAsync("_CheckAnswersRow", new ViewDataDictionary(ViewData)
                   {
                       { "Title", "Registered organisation name" },
                       { "Value", Model.CompanyRegisteredName },
                   })

            @await Html.PartialAsync("_CheckAnswersRow", new ViewDataDictionary(ViewData)
                   {
                       { "Title", "Company Registration Number" },
                       { "Value", Model.CompanyRegistrationNumber },
                   })

            @await Html.PartialAsync("_CheckAnswersRow", new ViewDataDictionary(ViewData)
                   {
                       { "Title", "Organisation address" },
                       { "Value", Model.CompanyAddress },
                   })

            @await Html.PartialAsync("_CheckAnswersRow", new ViewDataDictionary(ViewData)
                   {
                       { "Title", "Contact name" },
                       { "Value", Model.LoanApplicationContactName },
                       { "Link", Url.RouteUrl(new {
                           controller = "Accounts",
                           action = "UserProfile",
                           callback,
                           organisationId
                       }) }
                   })

            @await Html.PartialAsync("_CheckAnswersRow", new ViewDataDictionary(ViewData)
                   {
                       { "Title", "Email address" },
                       { "Value", Model.LoanApplicationContactEmail },
                   })

            @await Html.PartialAsync("_CheckAnswersRow", new ViewDataDictionary(ViewData)
                   {
                       { "Title", "Preferred telephone number" },
                       { "Value", Model.LoanApplicationContactTelephoneNumber},
                       { "Link", Url.RouteUrl(new {
                           controller = "Accounts",
                           action = "UserProfile",
                           callback,
                           organisationId
                       }) }
                   })
        </gds-summary-list>
    <gds-button name="action" type="submit" value="Continue" id="continue-button">
        Continue
    </gds-button>
</he-organisation-form>
</gds-div-grid-column-two-thirds>
