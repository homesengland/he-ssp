@using HE.Investments.Common.WWW.Extensions
@using HE.Investments.Common.WWW.Components.InputHeader
@using HE.Investments.Common.WWW.Components.ErrorMessage
@using HE.Investments.Common.WWW.Components

@model (string fieldName, string title, InputTitleType? titleType, DynamicComponentViewModel descriptionComponent, string hint, string value, string inputCssClass, int rows, int maxLength, bool isDisplayed)

@{
    var (hasError, errors) = ViewData.ModelState.GetErrors(Model.fieldName);
    var groupClass = hasError ? "govuk-form-group--error" : string.Empty;
    var inputClass = $"govuk-textarea govuk-js-character-count {Model.inputCssClass}";
    inputClass += hasError ? " govuk-textarea--error" : string.Empty;
}
@if (Model.isDisplayed)
{
    <div class="govuk-character-count" data-module="govuk-character-count" data-maxlength="@Model.maxLength">
        <gds-div-form-group class="@groupClass">
            <vc:input-header
                field-name="@Model.fieldName"
                title="@Model.title"
                title-type="@Model.titleType"
                hint="@Model.hint"/>

            @* ReSharper disable once ConditionIsAlwaysTrueOrFalseAccordingToNullableAPIContract *@
            @if (Model.descriptionComponent != null)
            {
                <vc:dynamic-component
                    component="@Model.descriptionComponent"/>
            }

            <vc:error-message field-name="@Model.fieldName"/>

            <textarea class="@inputClass" id="@Model.fieldName" name="@Model.fieldName" rows="@Model.rows">@Model.value</textarea>

            <div id="@($"{Model.fieldName}-info")" class="govuk-hint govuk-character-count__message">
                You can enter up to @Model.maxLength characters
            </div>
        </gds-div-form-group>
    </div>
}
