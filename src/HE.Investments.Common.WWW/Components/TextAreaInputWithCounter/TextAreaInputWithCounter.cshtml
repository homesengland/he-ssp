@using HE.Investments.Common.WWW.Extensions
@using HE.Investments.Common.WWW.Components.InputHeader
@using HE.Investments.Common.WWW.Components.ErrorMessage
@using HE.Investments.Common.WWW.Components

@model (string FieldName, string Title, InputTitleType? TitleType, DynamicComponentViewModel DescriptionComponent, string Hint, string Value, string InputCssClass, int Rows, int MaxLength, bool IsDisplayed)

@{
    var (hasError, _) = ViewData.ModelState.GetErrors(Model.FieldName);
    var groupClass = hasError ? "govuk-form-group--error" : string.Empty;
    var inputClass = $"govuk-textarea govuk-js-character-count {Model.InputCssClass}";
    inputClass += hasError ? " govuk-textarea--error" : string.Empty;
}
@if (Model.IsDisplayed)
{
    <div class="govuk-character-count" data-module="govuk-character-count" data-maxlength="@Model.MaxLength">
        <gds-div-form-group class="@groupClass">
            <vc:input-header
                field-name="@Model.FieldName"
                title="@Model.Title"
                title-type="@Model.TitleType"
                hint="@Model.Hint"/>

            @* ReSharper disable once ConditionIsAlwaysTrueOrFalseAccordingToNullableAPIContract *@
            @if (Model.DescriptionComponent != null)
            {
                <vc:dynamic-component
                    component="@Model.DescriptionComponent"/>
            }

            <vc:error-message field-name="@Model.FieldName"/>

            <textarea class="@inputClass" id="@Model.FieldName" name="@Model.FieldName" rows="@Model.Rows">@Model.Value</textarea>

            <div id="@($"{Model.FieldName}-info")" class="govuk-hint govuk-character-count__message">
                You can enter up to @Model.MaxLength characters
            </div>
        </gds-div-form-group>
    </div>
}
