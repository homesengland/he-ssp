@model HE.InvestmentLoans.BusinessLogic.ViewModel.SecurityViewModel
@{
    var id = ViewContext.RouteData.Values["id"];

    var dirLoansSub = Model?.DirLoansSub is null ? null : new List<string>() { $"{Model?.DirLoansSub}" };

    if (dirLoansSub!= null && Model?.DirLoansSub == "No")
    {
        dirLoansSub.Add($"{Model?.DirLoansSubMore}");
    }
}

<gds-summary-list class="govuk-!-margin-bottom-9">
    @await Html.PartialAsync("_CheckAnswersRow", new ViewDataDictionary(ViewData)
    {
    { "Title", "Charges outstanding or debt secured on company" },
    { "Value", Model.ChargesDebtCompany },
    { "Link", Url.Action("Change","Security", new {id = id,  state = "ChargesDebtCompany" }) }
    })

    @await Html.PartialAsync("_CheckAnswersRow", new ViewDataDictionary(ViewData)
    {
    { "Title", "Debenture" },
    { "Value",  Model.ChargesDebtCompanyInfo },
    { "Link", Url.Action("Change","Security", new {id = id,  state = "ChargesDebtCompany" }) }
    })

    @await Html.PartialAsync("_CheckAnswersRow", new ViewDataDictionary(ViewData)
    {
    { "Title", "Director loans" },
    { "Value",  Model.DirLoans },
    { "Link", Url.Action("Change","Security", new {id = id,  state = "DirLoans" }) }
    })

    @await Html.PartialAsync("_CheckAnswersRow", new ViewDataDictionary(ViewData)
    {
    { "Title", "Subordinated loans" },
    { "Value", dirLoansSub },
    { "Link", Url.Action("Change","Security", new {id = id,  state = "DirLoansSub" }) }
    })
</gds-summary-list>