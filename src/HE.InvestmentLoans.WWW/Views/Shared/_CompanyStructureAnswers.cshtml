@model HE.InvestmentLoans.Contract.CompanyStructure.CompanyStructureViewModel
@{
    var id = ViewContext.RouteData.Values["id"];
}
<gds-summary-list class="govuk-!-margin-bottom-9">
    @await Html.PartialAsync("_CheckAnswersRow", new ViewDataDictionary(ViewData)
           {
               { "Title", "Company established for this development" },
               { "Value", Model.Purpose },
               { "Link", Url.Action("Purpose", "CompanyStructureV2", new { id, state = "Purpose" }) },
               { "IsEditable", Model.IsEditable() }
           })
    @{
        var files = Model.OrganisationMoreInformationFiles?.ToDictionary(
            key => key.FileName,
            value => Url.Action("MoreInformationAboutOrganizationDownloadFile", "CompanyStructureV2", new { id = Model.LoanApplicationId, folderPath = value.FolderPath, fileName = value.FileName })
        );
        @await Html.PartialAsync("_CheckAnswersRow", new ViewDataDictionary(ViewData)
        {
            { "Title", "Additional information" },
            { "Value", Model.OrganisationMoreInformation },
            { "Link", Url.Action("MoreInformationAboutOrganization", "CompanyStructureV2", new { id, state = "ExistingCompany" }) },
            { "IsEditable", Model.IsEditable() },
            { "Files", files }
        })
    }

    @await Html.PartialAsync("_CheckAnswersRow", new ViewDataDictionary(ViewData)
           {
               { "Title", "Homes in the last three years" },
               { "Value", Model.HomesBuilt },
               { "Link", Url.Action("HowManyHomesBuilt", "CompanyStructureV2", new { id, state = "HomesBuilt" }) },
               { "IsEditable", Model.IsEditable() }
           })
</gds-summary-list>
