@using HE.InvestmentLoans.Contract.Security;
@using HE.Investments.Common.Gds
@using HE.Investments.Common.WWW.Extensions
@model HE.InvestmentLoans.Contract.Security.SecurityViewModel;

@inject ModelExpressionProvider modelProvider
@{
    var (conditionalInputInvalid, inputErrors) = @ViewData.ModelState.GetErrors(modelProvider.GetExpressionText((HE.InvestmentLoans.Contract.Security.SecurityViewModel x) => x.DirLoansSubMore));
    var (radioInvalid, radioErrors) = @ViewData.ModelState.GetErrors(modelProvider.GetExpressionText((HE.InvestmentLoans.Contract.Security.SecurityViewModel x) => x.DirLoansSub));
}

<gds-div-grid-column-two-thirds>
    <form asp-controller="Security" asp-action="DirLoansSubPost" asp-route-id="@Model.LoanApplicationId" asp-method="post" novalidate>
        <gds-back-link href="@Url.Action("Back","Security", new {id = Model.LoanApplicationId, currentPage = SecurityState.DirLoansSub})" text="Back" class="govuk-!-margin-bottom-8">
        </gds-back-link>
        <partial name="_ErrorSummaryPartial" model="null" />
        @Html.HiddenFor(x => x.LoanApplicationId)
        <gds-field-set>
            <gds-div-form-group invalid="radioInvalid">
                <gds-legend size="ControlSize.L">
                    <gds-fieldset-heading>
                        @SecurityPageTitles.DirLoansSub
                    </gds-fieldset-heading>
                </gds-legend>
                <gds-div-hint>
                    A subordinated loan is debt that’s only paid off after all senior loans are paid off, if there’s any money left.
                </gds-div-hint>

                @if (radioInvalid)
                {
                    <p id="where-do-you-live-error" class="govuk-error-message">
                        <span class="govuk-visually-hidden">Error:</span> @radioErrors
                    </p>
                }
                <gds-radio-yes-no asp-for="DirLoansSub"
                                  with-no-input
                                  inner-input-for="DirLoansSubMore"
                                  inner-input-text="Tell us why these director loans cannot be subordinated."
                                  class="govuk-!-margin-bottom-8"
                                  is-conditional-input-invalid="conditionalInputInvalid"
                                  value="@Model.DirLoansSub"
                                  inner-input-value="@Model.DirLoansSubMore"
                                  conditional-input-error="@inputErrors"></gds-radio-yes-no>
            </gds-div-form-group>

            <button class="govuk-button" data-module="govuk-button" name="action" type="submit" value="@(Model.StateChanged?"Change":"Continue")" id="continue-button">
                Continue
            </button>
        </gds-field-set>
    </form>

    <partial name="_HomeAndCheckAnswersLinks" />
</gds-div-grid-column-two-thirds>

@await Html.YesNoConditionalInputScript(modelProvider.GetExpressionText((HE.InvestmentLoans.Contract.Security.SecurityViewModel x) => x.DirLoansSub))
