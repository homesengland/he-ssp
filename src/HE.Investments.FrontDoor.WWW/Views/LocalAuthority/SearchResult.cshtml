@using HE.Investments.Common.WWW.Components.SelectList
@using HE.Investments.Common.WWW.Models
@using HE.Investments.Common.Contract;
@using HE.Investments.FrontDoor.WWW.Views.Site.Const
@using SelectList = Microsoft.AspNetCore.Mvc.Rendering.SelectList
@using HE.Investments.Common.Contract.Pagination
@using HE.Investments.FrontDoor.Contract.LocalAuthority

@model (PaginationResult<LocalAuthority> Items, string ProjectId, string SiteId, string Phrase)

@{
    ViewData["Title"] = SitePageTitles.LocalAuthorityResult;

    var items = new PaginationResult<SelectListItemViewModel>(
        Model!.Items.Items.Select(i => new SelectListItemViewModel(
            Url.Action("LocalAuthorityConfirm", "Site", new { projectId = Model.ProjectId, siteId = Model.SiteId, localAuthorityId = i.Id }) ?? string.Empty,
            i.Name,
            null)).ToList(),
        Model.Items.CurrentPage,
        Model.Items.ItemsPerPage,
        Model.Items.TotalItems);
}

<gds-div-grid-column-two-thirds>
    <vc:local-authority-workflow-back-button current-page="@LocalAuthorityWorkflowState.SearchResult" project-id="@Model.ProjectId" site-id="@Model.SiteId" />

    @await Html.PartialAsync("~/Partials/Errors/_ErrorSummaryPartial.cshtml")

    <vc:page-header title="@SitePageTitles.LocalAuthorityResult" caption="@ViewBag.ProjectName"/>

    <vc:select-list
        items="@items"
        paragraph-with-link="@(new ParagraphWithLinkModel("If you are not sure which local authority to choose, you can", new LinkModel("Search", "LocalAuthority", new { siteId = Model.SiteId, projectId = Model.ProjectId }), "search for the name of the local\nauthority using a postcode."))"
        paging-navigation-url="@Url.Action("SearchResult", "LocalAuthority", new { siteId = Model.SiteId, projectId = Model.ProjectId, phrase = Model.Phrase })"/>

</gds-div-grid-column-two-thirds>
