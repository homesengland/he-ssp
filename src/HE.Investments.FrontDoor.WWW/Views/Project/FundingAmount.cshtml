@using HE.Investments.FrontDoor.Contract.Project
@using HE.Investments.FrontDoor.WWW.Views.Shared.Components.FrontDoorWorkflowBackButton
@using HE.Investments.Common.WWW.Components.FormButton
@using HE.Investments.Common.WWW.Components.RadioListWithOr
@using HE.Investments.Common.WWW.Helpers
@using HE.Investments.FrontDoor.Contract.Project.Enums
@using HE.Investments.FrontDoor.WWW.Views.Project.Const
@using Microsoft.AspNetCore.Mvc.TagHelpers
@model ProjectDetails
@{
    ViewData["Title"] = ProjectPageTitles.FundingAmount;
    var allOptions = SelectListHelper.FromEnumToExtendedList<RequiredFundingOption>().ToList();
    var availableOptions = allOptions.Where(o => o.Value != RequiredFundingOption.IDoNotKnow.ToString());
    var alternativeOption = allOptions.Single(o => o.Value == RequiredFundingOption.IDoNotKnow.ToString());
}

<gds-div-grid-column-two-thirds>
    <vc:front-door-workflow-back-button current-page="@ProjectWorkflowState.FundingAmount"></vc:front-door-workflow-back-button>
    @await Html.PartialAsync("~/Partials/Errors/_ErrorSummaryPartial.cshtml")

    <vc:page-header caption="@ViewBag.ProjectName" />

    <form asp-controller="Project" asp-action="FundingAmount" asp-route-workflow="@Context.Request.Query["workflow"]" asp-method="post" novalidate>

        <vc:radio-list-with-or
               title="@ProjectPageTitles.GeographicFocus"
                                title-type="@InputTitleType.PageHeader"
                                field-name="@nameof(Model.RequiredFunding)"
                                available-options="@availableOptions"
                                alternative-option="@alternativeOption"
                                value="@Model.RequiredFunding"/>

        <vc:form-button/>
        <vc:return-to-account-link/>
    </form>
</gds-div-grid-column-two-thirds>
