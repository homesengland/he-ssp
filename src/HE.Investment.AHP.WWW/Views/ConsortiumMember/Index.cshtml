@using HE.Investment.AHP.WWW.Views.ConsortiumMember.Const
@using HE.Investments.Common.WWW.Components.PageHeader
@using HE.Investment.AHP.WWW.Routing
@using HE.Investment.AHP.WWW.Views.Shared.Components.ReturnToAccountLink
@using HE.Investments.AHP.Consortium.Contract
@using HE.Investments.AHP.Consortium.Contract.Enums
@using HE.Investments.Common.Gds
@using HE.Investments.Common.WWW.Components.SummaryList
@using HE.Investments.Common.WWW.Extensions
@using HE.Investments.Common.WWW.TagHelpers
@model HE.Investment.AHP.WWW.Models.ConsortiumMember.ManageConsortiumModel
@{
    ViewData["Title"] = ConsortiumMemberPageTitles.ConsortiumManagement(Model.Details.LeadPartner.Details.Name);
    var organisationId = Context.Request.RouteValues["organisationId"]?.ToString();

    ViewBag.Breadcrumbs = AhpBreadcrumbsBuilder
        .Empty(organisationId)
        .WithOrganisation(Model.OrganisationName)
        .WithConsortiumManagement()
        .WithApplicationsList(Model.Details.Programme.Name)
        .Build();

    var contractedMembers = Model.Details.Members
        .Where(x => x.Status == ConsortiumMemberStatus.Active)
        .Select(x => new SummaryListItem(x.Details.Name, Model.CanManageConsortium ? new[] { MemberActionFactory("RemoveMember", "Request to remove", x) } : Array.Empty<SummaryListItemAction>()))
        .ToList();

    var pendingConsortiumMembers = Model.Details.Members
        .Where(x => x.Status == ConsortiumMemberStatus.PendingAddition)
        .Select(x => new SummaryListItem(x.Details.Name))
        .ToList();

    var requestsToRemove = Model.Details.Members
        .Where(x => x.Status == ConsortiumMemberStatus.PendingRemoval)
        .Select(x => new SummaryListItem(x.Details.Name))
        .ToList();

    SummaryListItemAction MemberActionFactory(string actionName, string displayName, ConsortiumMemberDetails member) =>
        new(displayName, Url.OrganisationAction(actionName, "ConsortiumMember", new { consortiumId = Model.Details.ConsortiumId.Value, memberId = member.OrganisationId.ToString() }) ?? string.Empty);
}

<div class="govuk-grid-column-two-thirds">
    <vc:page-header title="@ConsortiumMemberPageTitles.ConsortiumManagement(Model.Details.LeadPartner.Details.Name)"/>

    @if (Model.CanManageConsortium)
    {
        <gds-h2>Add a new member</gds-h2>
        <gds-p>To add a new member, fill out their details and the request will be reviewed.</gds-p>
        <link-button
            button-type="@ButtonType.Standard"
            action-url="@Url.OrganisationAction("SearchOrganisation", "ConsortiumMember", new { consortiumId = Model.Details.ConsortiumId.Value })">
            Add new member
        </link-button>
    }
</div>

@if (contractedMembers.Any())
{
    <vc:summary-list header="Contracted consortium members"
                     paragraph="These members have been approved and added to the consortium. You can request to remove or change the members details."
                     items="@contractedMembers"/>
}

@if (pendingConsortiumMembers.Any())
{
    <vc:summary-list header="Pending consortium members"
                     paragraph="New members will be shown here until they are approved internally. You can cancel a request below."
                     items="@pendingConsortiumMembers"/>
}

@if (requestsToRemove.Any())
{
    <vc:summary-list header="Requests to remove"
                     paragraph="Removed members will be shown here until they are approved internally. You can cancel a request below."
                     items="@requestsToRemove"/>
}

<div class="govuk-grid-column-two-thirds govuk-!-margin-top-6">
    <gds-h2>Changing or deleting this consortium</gds-h2>
    <gds-p>If you need to make changes to, or delete this consortium, contact Homes England. We will do this for you.</gds-p>

    <div class="govuk-!-margin-top-8">
        <vc:return-to-account-link/>
    </div>
</div>
