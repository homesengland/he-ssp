@using HE.Investments.Common.WWW.Components.PageHeader
@using HE.Investment.AHP.WWW.Routing
@using HE.Investments.Common.Extensions
@using HE.Investments.Common.WWW.Components.ApplicationStatusTagComponent
@using HE.Investments.Common.WWW.Components.ListCard
@using HE.Investments.Common.WWW.Extensions
@model HE.Investment.AHP.Contract.Project.ProjectDetailsModel
@{
    var title = Model.ProjectName;
    ViewData["Title"] = title;
    var organisationId = Context.Request.RouteValues["organisationId"]?.ToString();
    var projectId = Context.Request.RouteValues["projectId"]?.ToString();

    ViewBag.Breadcrumbs = AhpBreadcrumbsBuilder
        .Empty(organisationId)
        .WithOrganisations()
        .WithOrganisation(Model.OrganisationName)
        .WithProjectsList()
        .WithProjectDetails(Model.ProjectName, projectId!)
        .Build();
}
<div class="govuk-grid-column-full govuk-!-margin-top-6">
    <vc:page-header title="@title" caption="@Model.OrganisationName"/>

    <gds-div-grid-column-two-thirds class="govuk-!-padding-left-0">
        @{
            var applications = Model.Applications.Items.Select(x =>
                new ListCardItemModel(
                    x.Name,
                    new DynamicComponentViewModel(nameof(ApplicationStatusTagComponent), new { applicationStatus = x.Status, additionalClasses = "application-status-project-list-govuk-tag" }),
                    Url.OrganisationAction("TaskList", "Application", new { applicationId = x.Id.Value })!))
                    .ToList();

            var description = applications.IsEmpty()
                ? "Your applications will appear here once added."
                : "This includes applications awaiting decision, not approved or pending approval.";

            var items = new ListCardModel(
                Model.ProgrammeName,
                applications,
                "Applications",
                description,
                "View all applications",
                applications.Any() ? Url.OrganisationAction("Applications", "Project", new { projectId = Model.ProjectId }) : null,
                3);

            <vc:list-card model="@items"></vc:list-card>
        }
    </gds-div-grid-column-two-thirds>

    @await Html.PartialAsync("Partials/_ProjectStartAppAndViewSites", (Model.ProgrammeName, Model.ProjectId.Value, Model.IsReadOnly))
</div>
