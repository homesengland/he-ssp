@using HE.Investment.AHP.WWW.Routing
@using HE.Investment.AHP.WWW.Extensions
@using HE.Investment.AHP.Contract.HomeTypes.Enums
@using HE.Investment.AHP.WWW.Views.HomeTypes.Const
@using HE.Investment.AHP.WWW.Views.Shared.Components.ReturnToApplicationLink
@using HE.Investments.Common.Extensions
@using HE.Investments.Common.Gds
@using HE.Investments.Common.WWW.Extensions
@model HE.Investment.AHP.WWW.Models.HomeTypes.HomeTypeListModel

@{
    var applicationId = this.GetApplicationIdFromRoute();
    var organisationId = Context.Request.RouteValues["organisationId"]?.ToString();

    ViewBag.Breadcrumbs = AhpBreadcrumbsBuilder
        .New(organisationId)
        .WithSites(Model.ProjectId)
        .WithApplication(applicationId, Model.ApplicationName)
        .Build();
    ViewData["Title"] = HomeTypesPageTitles.HomeTypes;
}

<div class="govuk-grid-column-full govuk-!-margin-top-6">
    <partial name="~/Partials/Errors/_ErrorSummaryPartial.cshtml"/>
    <vc:notification/>

    <span class="govuk-caption-l govuk-!-margin-top-1">@Model.ApplicationName</span>
    <gds-h1>@HomeTypesPageTitles.HomeTypes</gds-h1>

    <gds-p class="govuk-!-width-three-quarters" hidden="@Model.IsReadOnly">
        Add the home types for this application. You can duplicate and edit a home type.
    </gds-p>
    <he-organisation-form asp-controller="HomeTypes" asp-action="List" asp-method="post" novalidate>
        @Html.HiddenFor(m => Model.ApplicationName)
        @Html.HiddenFor(m => Model.TotalExpectedNumberOfHomes)
        @for (var i = 0; i < Model.AllowedOperations.Length; i++)
        {
            var index = i;
            @Html.HiddenFor(m => m.AllowedOperations[index])
        }

        @if (Model.HomeTypes.Any())
        {
            <table class="govuk-table govuk-!-margin-bottom-0" data-testid="home-types-table">
                <thead class="govuk-table__head">
                <tr class="govuk-table__row">
                    <th scope="col" class="govuk-table__header">Home type name</th>
                    <th scope="col" class="govuk-table__header">Number of homes</th>
                    <th scope="col" class="govuk-table__header">Type of housing</th>
                    <td class="govuk-table__header" />
                </tr>
                </thead>
                <tbody class="govuk-table__body">

                @for (int i = 0; i < Model.HomeTypes.Count; i++)
                {
                    var index = i;
                    @Html.HiddenFor(model => Model.HomeTypes[index].HomeTypeId)
                    @Html.HiddenFor(model => Model.HomeTypes[index].HomeTypeName)
                    @Html.HiddenFor(model => Model.HomeTypes[index].HousingType)
                    @Html.HiddenFor(model => Model.HomeTypes[index].NumberOfHomes)

                    <tr class="govuk-table__row">
                        <td class="govuk-table__cell">
                            <gds-link class="govuk-link--no-visited-state"
                                      data-testid="home-type-@Model.HomeTypes[index].HomeTypeId"
                                      href="@Url.OrganisationAction("Start", "HomeTypes", new { applicationId, homeTypeId = Model.HomeTypes[index].HomeTypeId, redirect = true })">
                                @(Model.HomeTypes[index].HomeTypeName)
                            </gds-link>
                        </td>
                        <td class="govuk-table__cell" data-testid="number-of-homes-@Model.HomeTypes[index].HomeTypeId">
                            @(Model.HomeTypes[index].NumberOfHomes?.ToString() ?? "Not provided")
                        </td>
                        <td class="govuk-table__cell">
                            @(Model.HomeTypes[index].HousingType == HousingType.Undefined ? "Not provided" : Model.HomeTypes[index].HousingType.GetDescription())
                        </td>
                        <td class="govuk-table__cell govuk-!-text-align-right" hidden="@Model.IsReadOnly">
                            <gds-link class="govuk-link--no-visited-state"
                                      data-testid="duplicate-@Model.HomeTypes[index].HomeTypeId"
                                      href="@Url.OrganisationAction("Duplicate", "HomeTypes", new { applicationId, homeTypeId = Model.HomeTypes[index].HomeTypeId })">
                                Duplicate
                            </gds-link>
                            <gds-link class="govuk-link--no-visited-state govuk-!-margin-left-4"
                                      href="@Url.OrganisationAction("Remove", "HomeTypes", new { applicationId, homeTypeId = Model.HomeTypes[index].HomeTypeId })">
                                Remove
                            </gds-link>
                        </td>
                    </tr>
                }

                @if (Model.IsEditable)
                {
                    <tr>
                        <td class="govuk-!-padding-top-6" colspan="4">
                            <div class="govuk-details__text">
                                <gds-p>
                                    You told us you are delivering @Model.TotalExpectedNumberOfHomes homes. You need to assign all of these homes to a home
                                    type before you can complete this section.
                                </gds-p>
                                <gds-p>
                                    If you want to change how many homes you are delivering, return to scheme information.
                                </gds-p>
                                <gds-p>
                                    Select save and continue to complete this section.
                                </gds-p>
                            </div>
                        </td>
                    </tr>
                }

                <tr>
                    <td class="govuk-!-padding-top-6">
                        <vc:form-button is-disabled="@Model.IsReadOnly" />
                    </td>
                    <td class="govuk-!-padding-top-6" colspan="3">
                        <link-button href="@Url.OrganisationAction("NewHomeTypeDetails","HomeTypes", new  { applicationId })"
                                     button-type="@ButtonType.Secondary"
                                     data-testid="add-home-type"
                                     is-disabled="@Model.IsReadOnly">
                            Add another home type
                        </link-button>
                    </td>
                </tr>
                </tbody>
            </table>
        }
        else
        {
            <gds-p>
                Your home type details will appear here once added.
            </gds-p>

            <link-button href="@Url.OrganisationAction("NewHomeTypeDetails","HomeTypes", new  { applicationId })"
                         data-testid="add-home-type"
                         is-disabled="@Model.IsReadOnly">
                Add a home type
            </link-button>
        }
        <vc:return-to-application-link application-id="@applicationId" is-editable="@false" />
    </he-organisation-form>
</div>
