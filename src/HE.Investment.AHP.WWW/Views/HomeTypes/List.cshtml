@using HE.Investment.AHP.WWW.Routing
@using HE.Investment.AHP.WWW.Extensions
@using HE.Investment.AHP.Contract.HomeTypes.Enums
@using HE.Investments.Common.Extensions
@model HE.Investment.AHP.WWW.Models.HomeTypes.HomeTypeListModel

@{
    var applicationId = this.GetApplicationIdFromRoute();

    ViewBag.Breadcrumbs = AhpBreadcrumbsBuilder
        .New()
        .WithSites()
        .WithSchemes()
        .WithApplication(applicationId, Model.ApplicationName)
        .Build();
}

<div class="govuk-grid-column-full govuk-!-margin-top-6">
    <partial name="~/Partials/Errors/_ErrorSummaryPartial.cshtml"/>
    <partial name="~/Partials/_Notification.cshtml"/>

    <span class="govuk-caption-l govuk-!-margin-top-1">@Model.ApplicationName</span>
    <gds-h1>Home types</gds-h1>

    <gds-p class="govuk-!-width-three-quarters" hidden="@Model.IsReadOnly">
        Add the home types for this application. You can duplicate and edit a home type.
    </gds-p>

    <form asp-controller="HomeTypes" asp-action="List" asp-method="post" novalidate>
        @Html.HiddenFor(m => Model.ApplicationName)
        @Html.HiddenFor(m => Model.IsEditable)

        @if (Model.HomeTypes.Any())
        {
            <table class="govuk-table govuk-!-margin-bottom-0">
                <thead class="govuk-table__head">
                <tr class="govuk-table__row">
                    <th scope="col" class="govuk-table__header">Home type name</th>
                    <th scope="col" class="govuk-table__header">Number of homes</th>
                    <th scope="col" class="govuk-table__header">Type of housing</th>
                    <td class="govuk-table__header"/>
                </tr>
                </thead>
                <tbody class="govuk-table__body">

                @for (int i = 0; i < Model.HomeTypes.Count; i++)
                {
                    var index = i;
                    @Html.HiddenFor(model => Model.HomeTypes[index].HomeTypeId)
                    @Html.HiddenFor(model => Model.HomeTypes[index].HomeTypeName)
                    @Html.HiddenFor(model => Model.HomeTypes[index].HousingType)
                    @Html.HiddenFor(model => Model.HomeTypes[index].NumberOfHomes)

                    <tr class="govuk-table__row" id="HomeType-@Model.HomeTypes[index].HomeTypeId">
                        <td class="govuk-table__cell">
                            <gds-link class="govuk-link--no-visited-state"
                                      href="@Url.RouteUrl("subSection", new { controller = "HomeTypes", action = "HomeTypeDetails", applicationId, id = Model.HomeTypes[index].HomeTypeId, redirect = true })">
                                @(Model.HomeTypes[index].HomeTypeName)
                            </gds-link>
                        </td>
                        <td class="govuk-table__cell">
                            @(Model.HomeTypes[index].NumberOfHomes?.ToString() ?? "Not provided")
                        </td>
                        <td class="govuk-table__cell">
                            @(Model.HomeTypes[index].HousingType == HousingType.Undefined ? "Not provided" : Model.HomeTypes[index].HousingType.GetDescription())
                        </td>
                        <td class="govuk-table__cell govuk-!-text-align-right" hidden="@Model.IsReadOnly">
                            <gds-link class="govuk-link--no-visited-state"
                                      href="@Url.RouteUrl("subSection", new { controller = "HomeTypes", action = "Duplicate", applicationId, id = Model.HomeTypes[index].HomeTypeId })">
                                Duplicate
                            </gds-link>
                            <gds-link class="govuk-link--no-visited-state govuk-!-margin-left-4"
                                      href="@Url.RouteUrl("subSection", new { controller = "HomeTypes", action = "Remove", applicationId, id = Model.HomeTypes[index].HomeTypeId })">
                                Remove
                            </gds-link>
                        </td>
                    </tr>
                }

                <tr>
                    <td class="govuk-!-padding-top-6">
                        <button class="govuk-button" data-module="govuk-button" name="action" type="submit" value="Continue" id="continue-button" disabled="@Model.IsReadOnly">
                            Save and continue
                        </button>
                    </td>
                    <td class="govuk-!-padding-top-6" colspan="3">
                        <link-button is-secondary="true" href="@Url.RouteUrl("section", new { controller = "HomeTypes", action = "HomeTypeDetails", applicationId })" is-disabled="@Model.IsReadOnly">Add another home type</link-button>
                    </td>
                </tr>
                </tbody>
            </table>
        }
        else
        {
            <gds-p>
                Your home type details will appear here once added.
            </gds-p>

            <link-button href="@Url.RouteUrl("section", new { controller = "HomeTypes", action = "HomeTypeDetails", applicationId })" is-disabled="@Model.IsReadOnly">Add a home type</link-button>
        }
            <vc:return-to-application-link application-id="@applicationId" is-editable="@false"/>

    </form>
</div>
