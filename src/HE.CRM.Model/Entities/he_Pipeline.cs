#pragma warning disable CS1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DataverseModel
{
	
	
	[System.Runtime.Serialization.DataContractAttribute()]
	public enum he_pipeline_he_ActivitiesinThisProject
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Acquiringland = 134370003,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Developinghomesincludinganyminorsiterelatedinfrastructure = 134370000,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Manufacturinghomeswithinafactory = 134370002,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Other = 134370005,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Providinginfrastructure = 134370001,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SellinglandtoHomesEngland = 134370004,
	}
	
	/// <summary>
	/// What activity are you looking to support? (all will include advice therefore only select Advice/Capacity if no funding is required)?
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	public enum he_pipeline_he_ActivitiesToSupport
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Acquisition = 134370001,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Advice = 134370000,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Affordablehousing = 134370002,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Funddevelopment = 134370003,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Fundinfrastructure = 134370004,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MMCcapacityfunding = 134370005,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Noactivityrequired = 134370006,
	}
	
	[System.Runtime.Serialization.DataContractAttribute()]
	public enum he_Pipeline_he_amountofaffordablehomes
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Idonotknow = 134370004,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Ionlywanttodeliveropenmarkethomes = 134370003,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Iwanttodeliver100affordablehomes = 134370000,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Iwanttodeliveropenmarkethomesandalsoaffordablehomesabovetheamountrequiredbyplanning = 134370001,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Iwanttodeliveropenmarkethomesandtheamountofaffordablehomesrequiredbyplanning = 134370002,
	}
	
	[System.Runtime.Serialization.DataContractAttribute()]
	public enum he_Pipeline_he_Commercialsensitivity
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CommerciallySensitive = 134370001,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NotCommerciallysensitive = 134370000,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SensitiveNondisclosureAgreementNDAinplace = 134370002,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SensitivePublicLiabilityCompanyPLCinvolvedindelivery = 134370003,
	}
	
	[System.Runtime.Serialization.DataContractAttribute()]
	public enum he_Pipeline_he_fundingask
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		_10millionto30million = 134370004,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		_1millionto5million = 134370002,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		_250000to1million = 134370001,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		_30millionto50million = 134370005,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		_5millionto10million = 134370003,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Idontknow = 134370007,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Lessthan250000 = 134370000,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Morethan50million = 134370006,
	}
	
	[System.Runtime.Serialization.DataContractAttribute()]
	public enum he_pipeline_he_he_infrastructuredoesyourprojectdeliver
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Enabling = 134370001,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Idonotknow = 134370004,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Other = 134370003,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Physicalinfrastructure = 134370002,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Sitepreparation = 134370000,
	}
	
	[System.Runtime.Serialization.DataContractAttribute()]
	public enum he_Pipeline_he_howmuchfundingdoyourequired
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		_10millionto30million = 134370004,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		_1millionto5million = 134370002,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		_250000to1million = 134370001,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		_30millionto50million = 134370005,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		_5millionto10million = 134370003,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Idonotknow = 134370007,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Lessthan250000 = 134370000,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Morethan50million = 134370006,
	}
	
	[System.Runtime.Serialization.DataContractAttribute()]
	public enum he_pipeline_he_IdentifiedInterventionProgramme
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AffordableHousingCME = 134370003,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BIL = 134370001,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Brokerage = 134370004,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		HBFInfrastructureLoan = 134370002,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LandAssemblyFund = 134370005,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LUHBF = 134370000,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SingleLandProgramme = 134370006,
	}
	
	[System.Runtime.Serialization.DataContractAttribute()]
	public enum he_Pipeline_he_Landtype
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Brownfield = 134370000,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Greenfield = 134370001,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Mixed = 134370002,
	}
	
	[System.Runtime.Serialization.DataContractAttribute()]
	public enum he_Pipeline_he_LeadDirectorate
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AffordableHousing = 134370004,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Development = 134370002,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Investment = 134370001,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MPP = 134370003,
	}
	
	[System.Runtime.Serialization.DataContractAttribute()]
	public enum he_Pipeline_he_Pathway
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Pathway1 = 134370000,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Pathway2 = 134370001,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Pathway3 = 134370002,
	}
	
	/// <summary>
	/// Select a planning stage
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	public enum he_Pipeline_he_PlanningStageforIntendedUse
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Allocated = 134370003,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DetailedReservedMattersGranted = 134370007,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		EmergingAllocated = 134370002,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		None = 134370000,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Other = 134370008,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		OutlineGranted = 134370006,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		OutlineGrantedsubjecttoS016 = 134370005,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		OutlineSubmitted = 134370004,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Unallocated = 134370001,
	}
	
	[System.Runtime.Serialization.DataContractAttribute()]
	public enum he_Pipeline_he_Projecttype
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Partner = 134370002,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Place = 134370004,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Site = 134370001,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		StrategicProject = 134370003,
	}
	
	[System.Runtime.Serialization.DataContractAttribute()]
	public enum he_Pipeline_he_Projecttypedescription
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PartnerNositesidentifiedbutpotentialpartnershiparrangement = 134370002,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PlaceWorkingonwiderstrategyforaplace = 134370004,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SiteKnownsiteidentifiedbutneedssupport = 134370001,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		StrategicProjectCreatingagrouptorelatemultipleexistingprojectswithdifferenttimescalesforapprovals = 134370003,
	}
	
	[System.Runtime.Serialization.DataContractAttribute()]
	public enum he_Pipeline_he_ReasonforArchive
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Createdinerror = 134370001,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Duplicated = 134370002,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Inactiveformorethan6months = 134370007,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Marketprogressed = 134370003,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Nolongeraprospect = 134370004,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Noteligibleforsupport = 134370006,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Otherfundingprogressed = 134370005,
	}
	
	[System.Runtime.Serialization.DataContractAttribute()]
	public enum he_Pipeline_he_RecordStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Loancreated = 134370001,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Open = 134370000,
	}
	
	[System.Runtime.Serialization.DataContractAttribute()]
	public enum he_pipeline_he_regionlocation
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		EastMidlands = 134370003,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		EastofEngland = 134370005,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		London = 134370008,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NorthEast = 134370000,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NorthWest = 134370001,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SouthEast = 134370006,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SouthWest = 134370007,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		WestMidlands = 134370004,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		YorkshireandtheHumber = 134370002,
	}
	
	/// <summary>
	/// Will funding include a mix of financial transaction/Non financial transaction?
	///(FT /Non FT Spend Mix)
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	public enum he_Pipeline_he_WhatFundingInclude
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FT = 134370000,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NonFT = 134370001,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Spendmix = 134370002,
	}
	
	[System.Runtime.Serialization.DataContractAttribute()]
	public enum he_Pipeline_he_whatisthegeographicfocusoftheproject
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Idonotknow = 134370003,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		National = 134370000,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Regional = 134370001,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Specificlocalauthority = 134370002,
	}
	
	/// <summary>
	/// Reason for the status of the Pipeline
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	public enum he_Pipeline_StatusCode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Active = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Archived = 134370001,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Complete = 134370003,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Inactive = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		OnHold = 134370002,
	}
	
	/// <summary>
	/// Status of the Pipeline
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	public enum he_PipelineState
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Active = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Inactive = 1,
	}
	
	[System.Runtime.Serialization.DataContractAttribute()]
	[Microsoft.Xrm.Sdk.Client.EntityLogicalNameAttribute("he_pipeline")]
	public partial class he_Pipeline : Microsoft.Xrm.Sdk.Entity, System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	{
		
		/// <summary>
		/// Available fields, a the time of codegen, for the he_pipeline entity
		/// </summary>
		public partial class Fields
		{
			public const string CreatedBy = "createdby";
			public const string CreatedByName = "createdbyname";
			public const string CreatedByYomiName = "createdbyyominame";
			public const string CreatedOn = "createdon";
			public const string CreatedOnBehalfBy = "createdonbehalfby";
			public const string CreatedOnBehalfByName = "createdonbehalfbyname";
			public const string CreatedOnBehalfByYomiName = "createdonbehalfbyyominame";
			public const string ExchangeRate = "exchangerate";
			public const string he_Account = "he_account";
			public const string he_Account_Account_he_Pipeline = "he_Account_Account_he_Pipeline";
			public const string he_AccountName = "he_accountname";
			public const string he_AccountYomiName = "he_accountyominame";
			public const string he_activitiesinthisproject = "he_activitiesinthisproject";
			public const string he_activitiesinthisprojectName = "he_activitiesinthisprojectname";
			public const string he_ActivitiesToSupport = "he_activitiestosupport";
			public const string he_activitiestosupportName = "he_activitiestosupportname";
			public const string he_AdditionalInfo = "he_additionalinfo";
			public const string he_amountofaffordablehomes = "he_amountofaffordablehomes";
			public const string he_amountofaffordablehomesName = "he_amountofaffordablehomesname";
			public const string he_Commercialsensitivity = "he_commercialsensitivity";
			public const string he_commercialsensitivityName = "he_commercialsensitivityname";
			public const string he_ConfirmedInterventions = "he_confirmedinterventions";
			public const string he_confirmedinterventionsName = "he_confirmedinterventionsname";
			public const string he_Description = "he_description";
			public const string he_doyouhaveanidentifiedsite = "he_doyouhaveanidentifiedsite";
			public const string he_doyouhaveanidentifiedsiteName = "he_doyouhaveanidentifiedsitename";
			public const string he_doyourequirefundingforyourproject = "he_doyourequirefundingforyourproject";
			public const string he_doyourequirefundingforyourprojectName = "he_doyourequirefundingforyourprojectname";
			public const string he_EsriID = "he_esriid";
			public const string he_EstimatedCapitalFundingask = "he_estimatedcapitalfundingask";
			public const string he_estimatedcapitalfundingask_Base = "he_estimatedcapitalfundingask_base";
			public const string he_EstimatedRDELfundingask = "he_estimatedrdelfundingask";
			public const string he_estimatedrdelfundingask_Base = "he_estimatedrdelfundingask_base";
			public const string he_fundingask = "he_fundingask";
			public const string he_fundingaskName = "he_fundingaskname";
			public const string he_he_infrastructuredoesyourprojectdeliver = "he_he_infrastructuredoesyourprojectdeliver";
			public const string he_he_infrastructuredoesyourprojectdeliverName = "he_he_infrastructuredoesyourprojectdelivername";
			public const string he_he_pipeline_LeadIntervention_systemuser = "he_he_pipeline_LeadIntervention_systemuser";
			public const string he_he_pipeline_SponsorName_systemuser = "he_he_pipeline_SponsorName_systemuser";
			public const string he_he_projectlocalauthority_Project_he_pipel = "he_he_projectlocalauthority_Project_he_pipel";
			public const string he_HomesNumber = "he_homesnumber";
			public const string he_HomesNumber_Date = "he_homesnumber_date";
			public const string he_HomesNumber_State = "he_homesnumber_state";
			public const string he_housingdeliveryinengland = "he_housingdeliveryinengland";
			public const string he_housingdeliveryinenglandName = "he_housingdeliveryinenglandname";
			public const string he_howmanyhomeswillyourprojectenable = "he_howmanyhomeswillyourprojectenable";
			public const string he_howmuchfundingdoyourequired = "he_howmuchfundingdoyourequired";
			public const string he_howmuchfundingdoyourequiredName = "he_howmuchfundingdoyourequiredname";
			public const string he_IdentifiedInterventionProgramme = "he_identifiedinterventionprogramme";
			public const string he_identifiedinterventionprogrammeName = "he_identifiedinterventionprogrammename";
			public const string he_intentiontomakeaprofit = "he_intentiontomakeaprofit";
			public const string he_intentiontomakeaprofitName = "he_intentiontomakeaprofitname";
			public const string he_interaction = "he_interaction";
			public const string he_interactionName = "he_interactionname";
			public const string he_Interest_Over_Delegation = "he_interest_over_delegation";
			public const string he_interest_over_delegationName = "he_interest_over_delegationname";
			public const string he_InvolveOutsideActivity = "he_involveoutsideactivity";
			public const string he_involveoutsideactivityName = "he_involveoutsideactivityname";
			public const string he_Is_Novel_Contentious_Repercussive = "he_is_novel_contentious_repercussive";
			public const string he_is_novel_contentious_repercussiveName = "he_is_novel_contentious_repercussivename";
			public const string he_Landtype = "he_landtype";
			public const string he_landtypeName = "he_landtypename";
			public const string he_LeadDirectorate = "he_leaddirectorate";
			public const string he_leaddirectorateName = "he_leaddirectoratename";
			public const string he_LeadIntervention = "he_leadintervention";
			public const string he_LeadInterventionName = "he_leadinterventionname";
			public const string he_LeadInterventionYomiName = "he_leadinterventionyominame";
			public const string he_LocationSelected = "he_locationselected";
			public const string he_locationselectedName = "he_locationselectedname";
			public const string he_MultifunctionalTeamInvolved = "he_multifunctionalteaminvolved";
			public const string he_multifunctionalteaminvolvedName = "he_multifunctionalteaminvolvedname";
			public const string he_Name = "he_name";
			public const string he_NumberOfHomes = "he_numberofhomes";
			public const string he_parentproject = "he_parentproject";
			public const string he_parentprojectName = "he_parentprojectname";
			public const string he_PASIntegrationLastMessageReceivedDate = "he_pasintegrationlastmessagereceiveddate";
			public const string he_PASIntegrationLastMessageReceivedStatus = "he_pasintegrationlastmessagereceivedstatus";
			public const string he_Pathway = "he_pathway";
			public const string he_pathwayName = "he_pathwayname";
			public const string he_PCSProjectIdentifier = "he_pcsprojectidentifier";
			public const string he_pipeline_portalowner_contact = "he_pipeline_portalowner_contact";
			public const string he_pipeline_projectbelocated_he_localauthori = "he_pipeline_projectbelocated_he_localauthori";
			public const string he_pipeline_SharePointDocumentLocations = "he_pipeline_SharePointDocumentLocations";
			public const string he_pipeline_substantiveowner_systemuser = "he_pipeline_substantiveowner_systemuser";
			public const string he_pipeline_Teams = "he_pipeline_Teams";
			public const string he_PipelineCode = "he_pipelinecode";
			public const string he_PipelineId = "he_pipelineid";
			public const string Id = "he_pipelineid";
			public const string he_PlanningStageforIntendedUse = "he_planningstageforintendeduse";
			public const string he_planningstageforintendeduseName = "he_planningstageforintendedusename";
			public const string he_portalowner = "he_portalowner";
			public const string he_portalownerName = "he_portalownername";
			public const string he_portalownerYomiName = "he_portalowneryominame";
			public const string he_Postcode = "he_postcode";
			public const string he_previousresidentialbuildingexperience = "he_previousresidentialbuildingexperience";
			public const string he_projectbelocated = "he_projectbelocated";
			public const string he_projectbelocatedName = "he_projectbelocatedname";
			public const string he_ProjectName = "he_projectname";
			public const string he_projectprogressmoreslowly = "he_projectprogressmoreslowly";
			public const string he_projectprogressmoreslowlyName = "he_projectprogressmoreslowlyname";
			public const string he_ProjectStage = "he_projectstage";
			public const string he_projectstageName = "he_projectstagename";
			public const string he_Projecttype = "he_projecttype";
			public const string he_Projecttypedescription = "he_projecttypedescription";
			public const string he_projecttypedescriptionName = "he_projecttypedescriptionname";
			public const string he_projecttypeName = "he_projecttypename";
			public const string he_projectyear = "he_projectyear";
			public const string he_ProposedInterventions = "he_proposedinterventions";
			public const string he_proposedinterventionsName = "he_proposedinterventionsname";
			public const string he_ReasonforArchive = "he_reasonforarchive";
			public const string he_reasonforarchiveName = "he_reasonforarchivename";
			public const string he_Reasonforhold = "he_reasonforhold";
			public const string he_RecordStatus = "he_recordstatus";
			public const string he_recordstatusName = "he_recordstatusname";
			public const string he_regionlocation = "he_regionlocation";
			public const string he_regionlocationName = "he_regionlocationname";
			public const string he_SponsorName = "he_sponsorname";
			public const string he_SponsorNameName = "he_sponsornamename";
			public const string he_SponsorNameYomiName = "he_sponsornameyominame";
			public const string he_startofprojectmonth = "he_startofprojectmonth";
			public const string he_startofprojectyear = "he_startofprojectyear";
			public const string Referencinghe_strategic_parentproject_he_Pipeline = "he_strategic_parentproject_he_Pipeline";
			public const string he_StrategicProject_ChildProject = "he_StrategicProject_ChildProject";
			public const string he_substantiveowner = "he_substantiveowner";
			public const string he_substantiveownerName = "he_substantiveownername";
			public const string he_substantiveownerYomiName = "he_substantiveowneryominame";
			public const string he_UPRNumber = "he_uprnumber";
			public const string he_URL = "he_url";
			public const string he_WhatFundingInclude = "he_whatfundinginclude";
			public const string he_whatfundingincludeName = "he_whatfundingincludename";
			public const string he_whatisthegeographicfocusoftheproject = "he_whatisthegeographicfocusoftheproject";
			public const string he_whatisthegeographicfocusoftheprojectName = "he_whatisthegeographicfocusoftheprojectname";
			public const string ImportSequenceNumber = "importsequencenumber";
			public const string invln_loanapplication_HeProjectId_he_pipeline = "invln_loanapplication_HeProjectId_he_pipeline";
			public const string lk_he_pipeline_createdby = "lk_he_pipeline_createdby";
			public const string lk_he_pipeline_createdonbehalfby = "lk_he_pipeline_createdonbehalfby";
			public const string lk_he_pipeline_modifiedby = "lk_he_pipeline_modifiedby";
			public const string lk_he_pipeline_modifiedonbehalfby = "lk_he_pipeline_modifiedonbehalfby";
			public const string ModifiedBy = "modifiedby";
			public const string ModifiedByName = "modifiedbyname";
			public const string ModifiedByYomiName = "modifiedbyyominame";
			public const string ModifiedOn = "modifiedon";
			public const string ModifiedOnBehalfBy = "modifiedonbehalfby";
			public const string ModifiedOnBehalfByName = "modifiedonbehalfbyname";
			public const string ModifiedOnBehalfByYomiName = "modifiedonbehalfbyyominame";
			public const string OverriddenCreatedOn = "overriddencreatedon";
			public const string OwnerId = "ownerid";
			public const string OwnerIdName = "owneridname";
			public const string OwnerIdYomiName = "owneridyominame";
			public const string OwningBusinessUnit = "owningbusinessunit";
			public const string OwningBusinessUnitName = "owningbusinessunitname";
			public const string OwningTeam = "owningteam";
			public const string OwningUser = "owninguser";
			public const string processid = "processid";
			public const string Referencedhe_strategic_parentproject_he_Pipeline = "Referencedhe_strategic_parentproject_he_Pipeline";
			public const string stageid = "stageid";
			public const string StateCode = "statecode";
			public const string statecodeName = "statecodename";
			public const string StatusCode = "statuscode";
			public const string statuscodeName = "statuscodename";
			public const string team_he_pipeline = "team_he_pipeline";
			public const string TimeZoneRuleVersionNumber = "timezoneruleversionnumber";
			public const string TransactionCurrencyId = "transactioncurrencyid";
			public const string TransactionCurrencyIdName = "transactioncurrencyidname";
			public const string traversedpath = "traversedpath";
			public const string user_he_pipeline = "user_he_pipeline";
			public const string UTCConversionTimeZoneCode = "utcconversiontimezonecode";
			public const string VersionNumber = "versionnumber";
		}
		
		public const string AlternateKeys = "he_esriid|he_pipelinecode";
		
		/// <summary>
		/// Default Constructor.
		/// </summary>
		[System.Diagnostics.DebuggerNonUserCode()]
		public he_Pipeline() : 
				base(EntityLogicalName)
		{
		}
		
		public const string PrimaryIdAttribute = "he_pipelineid";
		
		public const string PrimaryNameAttribute = "he_name";
		
		public const string EntitySchemaName = "he_Pipeline";
		
		public const string EntityLogicalName = "he_pipeline";
		
		public const string EntityLogicalCollectionName = "he_pipelines";
		
		public const string EntitySetName = "he_pipelines";
		
		public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
		
		public event System.ComponentModel.PropertyChangingEventHandler PropertyChanging;
		
		[System.Diagnostics.DebuggerNonUserCode()]
		private void OnPropertyChanged(string propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
			}
		}
		
		[System.Diagnostics.DebuggerNonUserCode()]
		private void OnPropertyChanging(string propertyName)
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, new System.ComponentModel.PropertyChangingEventArgs(propertyName));
			}
		}
		
		/// <summary>
		/// Unique identifier of the user who created the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdby")]
		public Microsoft.Xrm.Sdk.EntityReference CreatedBy
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdby");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdbyname")]
		public string CreatedByName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("createdby"))
				{
					return this.FormattedValues["createdby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdbyyominame")]
		public string CreatedByYomiName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("createdby"))
				{
					return this.FormattedValues["createdby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Date and time when the record was created.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdon")]
		public System.Nullable<System.DateTime> CreatedOn
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("createdon");
			}
		}
		
		/// <summary>
		/// Unique identifier of the delegate user who created the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfby")]
		public Microsoft.Xrm.Sdk.EntityReference CreatedOnBehalfBy
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdonbehalfby");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("CreatedOnBehalfBy");
				this.SetAttributeValue("createdonbehalfby", value);
				this.OnPropertyChanged("CreatedOnBehalfBy");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfbyname")]
		public string CreatedOnBehalfByName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("createdonbehalfby"))
				{
					return this.FormattedValues["createdonbehalfby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfbyyominame")]
		public string CreatedOnBehalfByYomiName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("createdonbehalfby"))
				{
					return this.FormattedValues["createdonbehalfby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Exchange rate for the currency associated with the entity with respect to the base currency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("exchangerate")]
		public System.Nullable<decimal> ExchangeRate
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<decimal>>("exchangerate");
			}
		}
		
		/// <summary>
		/// Obsolete: don`t use this field. 
///There is "Project Partner" entity to keep relations between Partners and Projects 
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("he_account")]
		public Microsoft.Xrm.Sdk.EntityReference he_Account
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("he_account");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("he_Account");
				this.SetAttributeValue("he_account", value);
				this.OnPropertyChanged("he_Account");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("he_accountname")]
		public string he_AccountName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("he_account"))
				{
					return this.FormattedValues["he_account"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("he_accountyominame")]
		public string he_AccountYomiName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("he_account"))
				{
					return this.FormattedValues["he_account"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("he_activitiesinthisproject")]
		public virtual Microsoft.Xrm.Sdk.OptionSetValueCollection he_activitiesinthisproject
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValueCollection>("he_activitiesinthisproject");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("he_activitiesinthisproject");
				this.SetAttributeValue("he_activitiesinthisproject", value);
				this.OnPropertyChanged("he_activitiesinthisproject");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("he_activitiesinthisprojectname")]
		public string he_activitiesinthisprojectName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("he_activitiesinthisproject"))
				{
					return this.FormattedValues["he_activitiesinthisproject"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// If no activities are required, select "no activity required" 
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("he_activitiestosupport")]
		public virtual Microsoft.Xrm.Sdk.OptionSetValueCollection he_ActivitiesToSupport
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValueCollection>("he_activitiestosupport");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("he_ActivitiesToSupport");
				this.SetAttributeValue("he_activitiestosupport", value);
				this.OnPropertyChanged("he_ActivitiesToSupport");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("he_activitiestosupportname")]
		public string he_activitiestosupportName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("he_activitiestosupport"))
				{
					return this.FormattedValues["he_activitiestosupport"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("he_additionalinfo")]
		public string he_AdditionalInfo
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("he_additionalinfo");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("he_AdditionalInfo");
				this.SetAttributeValue("he_additionalinfo", value);
				this.OnPropertyChanged("he_AdditionalInfo");
			}
		}
		
		/// <summary>
		/// What amount of affordable homes are you planning to deliver?
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("he_amountofaffordablehomes")]
		public virtual Microsoft.Xrm.Sdk.OptionSetValue he_amountofaffordablehomes
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("he_amountofaffordablehomes");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("he_amountofaffordablehomes");
				this.SetAttributeValue("he_amountofaffordablehomes", value);
				this.OnPropertyChanged("he_amountofaffordablehomes");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("he_amountofaffordablehomesname")]
		public string he_amountofaffordablehomesName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("he_amountofaffordablehomes"))
				{
					return this.FormattedValues["he_amountofaffordablehomes"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("he_commercialsensitivity")]
		public virtual Microsoft.Xrm.Sdk.OptionSetValue he_Commercialsensitivity
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("he_commercialsensitivity");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("he_Commercialsensitivity");
				this.SetAttributeValue("he_commercialsensitivity", value);
				this.OnPropertyChanged("he_Commercialsensitivity");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("he_commercialsensitivityname")]
		public string he_commercialsensitivityName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("he_commercialsensitivity"))
				{
					return this.FormattedValues["he_commercialsensitivity"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("he_confirmedinterventions")]
		public virtual Microsoft.Xrm.Sdk.OptionSetValueCollection he_ConfirmedInterventions
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValueCollection>("he_confirmedinterventions");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("he_ConfirmedInterventions");
				this.SetAttributeValue("he_confirmedinterventions", value);
				this.OnPropertyChanged("he_ConfirmedInterventions");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("he_confirmedinterventionsname")]
		public string he_confirmedinterventionsName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("he_confirmedinterventions"))
				{
					return this.FormattedValues["he_confirmedinterventions"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// This is used in case studies.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("he_description")]
		public string he_Description
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("he_description");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("he_Description");
				this.SetAttributeValue("he_description", value);
				this.OnPropertyChanged("he_Description");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("he_doyouhaveanidentifiedsite")]
		public System.Nullable<bool> he_doyouhaveanidentifiedsite
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("he_doyouhaveanidentifiedsite");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("he_doyouhaveanidentifiedsite");
				this.SetAttributeValue("he_doyouhaveanidentifiedsite", value);
				this.OnPropertyChanged("he_doyouhaveanidentifiedsite");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("he_doyouhaveanidentifiedsitename")]
		public string he_doyouhaveanidentifiedsiteName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("he_doyouhaveanidentifiedsite"))
				{
					return this.FormattedValues["he_doyouhaveanidentifiedsite"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("he_doyourequirefundingforyourproject")]
		public System.Nullable<bool> he_doyourequirefundingforyourproject
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("he_doyourequirefundingforyourproject");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("he_doyourequirefundingforyourproject");
				this.SetAttributeValue("he_doyourequirefundingforyourproject", value);
				this.OnPropertyChanged("he_doyourequirefundingforyourproject");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("he_doyourequirefundingforyourprojectname")]
		public string he_doyourequirefundingforyourprojectName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("he_doyourequirefundingforyourproject"))
				{
					return this.FormattedValues["he_doyourequirefundingforyourproject"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Single Pipeline Esri ID
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("he_esriid")]
		public string he_EsriID
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("he_esriid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("he_EsriID");
				this.SetAttributeValue("he_esriid", value);
				this.OnPropertyChanged("he_EsriID");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("he_estimatedcapitalfundingask")]
		public Microsoft.Xrm.Sdk.Money he_EstimatedCapitalFundingask
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("he_estimatedcapitalfundingask");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("he_EstimatedCapitalFundingask");
				this.SetAttributeValue("he_estimatedcapitalfundingask", value);
				this.OnPropertyChanged("he_EstimatedCapitalFundingask");
			}
		}
		
		/// <summary>
		/// Value of the Estimated Capital Funding ask in base currency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("he_estimatedcapitalfundingask_base")]
		public Microsoft.Xrm.Sdk.Money he_estimatedcapitalfundingask_Base
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("he_estimatedcapitalfundingask_base");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("he_estimatedrdelfundingask")]
		public Microsoft.Xrm.Sdk.Money he_EstimatedRDELfundingask
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("he_estimatedrdelfundingask");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("he_EstimatedRDELfundingask");
				this.SetAttributeValue("he_estimatedrdelfundingask", value);
				this.OnPropertyChanged("he_EstimatedRDELfundingask");
			}
		}
		
		/// <summary>
		/// Value of the Estimated RDEL funding ask in base currency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("he_estimatedrdelfundingask_base")]
		public Microsoft.Xrm.Sdk.Money he_estimatedrdelfundingask_Base
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("he_estimatedrdelfundingask_base");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("he_fundingask")]
		public virtual Microsoft.Xrm.Sdk.OptionSetValue he_fundingask
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("he_fundingask");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("he_fundingask");
				this.SetAttributeValue("he_fundingask", value);
				this.OnPropertyChanged("he_fundingask");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("he_fundingaskname")]
		public string he_fundingaskName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("he_fundingask"))
				{
					return this.FormattedValues["he_fundingask"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("he_he_infrastructuredoesyourprojectdeliver")]
		public virtual Microsoft.Xrm.Sdk.OptionSetValueCollection he_he_infrastructuredoesyourprojectdeliver
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValueCollection>("he_he_infrastructuredoesyourprojectdeliver");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("he_he_infrastructuredoesyourprojectdeliver");
				this.SetAttributeValue("he_he_infrastructuredoesyourprojectdeliver", value);
				this.OnPropertyChanged("he_he_infrastructuredoesyourprojectdeliver");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("he_he_infrastructuredoesyourprojectdelivername")]
		public string he_he_infrastructuredoesyourprojectdeliverName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("he_he_infrastructuredoesyourprojectdeliver"))
				{
					return this.FormattedValues["he_he_infrastructuredoesyourprojectdeliver"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("he_homesnumber")]
		public System.Nullable<int> he_HomesNumber
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("he_homesnumber");
			}
		}
		
		/// <summary>
		/// Last Updated time of rollup field Homes.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("he_homesnumber_date")]
		public System.Nullable<System.DateTime> he_HomesNumber_Date
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("he_homesnumber_date");
			}
		}
		
		/// <summary>
		/// State of rollup field Homes.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("he_homesnumber_state")]
		public System.Nullable<int> he_HomesNumber_State
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("he_homesnumber_state");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("he_housingdeliveryinengland")]
		public System.Nullable<bool> he_housingdeliveryinengland
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("he_housingdeliveryinengland");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("he_housingdeliveryinengland");
				this.SetAttributeValue("he_housingdeliveryinengland", value);
				this.OnPropertyChanged("he_housingdeliveryinengland");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("he_housingdeliveryinenglandname")]
		public string he_housingdeliveryinenglandName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("he_housingdeliveryinengland"))
				{
					return this.FormattedValues["he_housingdeliveryinengland"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("he_howmanyhomeswillyourprojectenable")]
		public System.Nullable<int> he_howmanyhomeswillyourprojectenable
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("he_howmanyhomeswillyourprojectenable");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("he_howmanyhomeswillyourprojectenable");
				this.SetAttributeValue("he_howmanyhomeswillyourprojectenable", value);
				this.OnPropertyChanged("he_howmanyhomeswillyourprojectenable");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("he_howmuchfundingdoyourequired")]
		public virtual Microsoft.Xrm.Sdk.OptionSetValue he_howmuchfundingdoyourequired
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("he_howmuchfundingdoyourequired");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("he_howmuchfundingdoyourequired");
				this.SetAttributeValue("he_howmuchfundingdoyourequired", value);
				this.OnPropertyChanged("he_howmuchfundingdoyourequired");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("he_howmuchfundingdoyourequiredname")]
		public string he_howmuchfundingdoyourequiredName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("he_howmuchfundingdoyourequired"))
				{
					return this.FormattedValues["he_howmuchfundingdoyourequired"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("he_identifiedinterventionprogramme")]
		public virtual Microsoft.Xrm.Sdk.OptionSetValueCollection he_IdentifiedInterventionProgramme
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValueCollection>("he_identifiedinterventionprogramme");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("he_IdentifiedInterventionProgramme");
				this.SetAttributeValue("he_identifiedinterventionprogramme", value);
				this.OnPropertyChanged("he_IdentifiedInterventionProgramme");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("he_identifiedinterventionprogrammename")]
		public string he_identifiedinterventionprogrammeName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("he_identifiedinterventionprogramme"))
				{
					return this.FormattedValues["he_identifiedinterventionprogramme"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("he_intentiontomakeaprofit")]
		public System.Nullable<bool> he_intentiontomakeaprofit
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("he_intentiontomakeaprofit");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("he_intentiontomakeaprofit");
				this.SetAttributeValue("he_intentiontomakeaprofit", value);
				this.OnPropertyChanged("he_intentiontomakeaprofit");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("he_intentiontomakeaprofitname")]
		public string he_intentiontomakeaprofitName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("he_intentiontomakeaprofit"))
				{
					return this.FormattedValues["he_intentiontomakeaprofit"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("he_interaction")]
		public Microsoft.Xrm.Sdk.EntityReference he_interaction
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("he_interaction");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("he_interaction");
				this.SetAttributeValue("he_interaction", value);
				this.OnPropertyChanged("he_interaction");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("he_interactionname")]
		public string he_interactionName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("he_interaction"))
				{
					return this.FormattedValues["he_interaction"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// If relevant, could aggregated interest on the facility take the funding amount above delegation? (Interest Over Delegation)
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("he_interest_over_delegation")]
		public virtual Microsoft.Xrm.Sdk.OptionSetValue he_Interest_Over_Delegation
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("he_interest_over_delegation");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("he_Interest_Over_Delegation");
				this.SetAttributeValue("he_interest_over_delegation", value);
				this.OnPropertyChanged("he_Interest_Over_Delegation");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("he_interest_over_delegationname")]
		public string he_interest_over_delegationName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("he_interest_over_delegation"))
				{
					return this.FormattedValues["he_interest_over_delegation"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Would this involve activity outside of current programmes?
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("he_involveoutsideactivity")]
		public virtual Microsoft.Xrm.Sdk.OptionSetValue he_InvolveOutsideActivity
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("he_involveoutsideactivity");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("he_InvolveOutsideActivity");
				this.SetAttributeValue("he_involveoutsideactivity", value);
				this.OnPropertyChanged("he_InvolveOutsideActivity");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("he_involveoutsideactivityname")]
		public string he_involveoutsideactivityName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("he_involveoutsideactivity"))
				{
					return this.FormattedValues["he_involveoutsideactivity"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("he_is_novel_contentious_repercussive")]
		public virtual Microsoft.Xrm.Sdk.OptionSetValue he_Is_Novel_Contentious_Repercussive
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("he_is_novel_contentious_repercussive");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("he_Is_Novel_Contentious_Repercussive");
				this.SetAttributeValue("he_is_novel_contentious_repercussive", value);
				this.OnPropertyChanged("he_Is_Novel_Contentious_Repercussive");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("he_is_novel_contentious_repercussivename")]
		public string he_is_novel_contentious_repercussiveName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("he_is_novel_contentious_repercussive"))
				{
					return this.FormattedValues["he_is_novel_contentious_repercussive"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Select a land type
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("he_landtype")]
		public virtual Microsoft.Xrm.Sdk.OptionSetValue he_Landtype
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("he_landtype");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("he_Landtype");
				this.SetAttributeValue("he_landtype", value);
				this.OnPropertyChanged("he_Landtype");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("he_landtypename")]
		public string he_landtypeName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("he_landtype"))
				{
					return this.FormattedValues["he_landtype"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("he_leaddirectorate")]
		public virtual Microsoft.Xrm.Sdk.OptionSetValue he_LeadDirectorate
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("he_leaddirectorate");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("he_LeadDirectorate");
				this.SetAttributeValue("he_leaddirectorate", value);
				this.OnPropertyChanged("he_LeadDirectorate");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("he_leaddirectoratename")]
		public string he_leaddirectorateName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("he_leaddirectorate"))
				{
					return this.FormattedValues["he_leaddirectorate"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("he_leadintervention")]
		public Microsoft.Xrm.Sdk.EntityReference he_LeadIntervention
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("he_leadintervention");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("he_LeadIntervention");
				this.SetAttributeValue("he_leadintervention", value);
				this.OnPropertyChanged("he_LeadIntervention");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("he_leadinterventionname")]
		public string he_LeadInterventionName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("he_leadintervention"))
				{
					return this.FormattedValues["he_leadintervention"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("he_leadinterventionyominame")]
		public string he_LeadInterventionYomiName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("he_leadintervention"))
				{
					return this.FormattedValues["he_leadintervention"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("he_locationselected")]
		public System.Nullable<bool> he_LocationSelected
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("he_locationselected");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("he_LocationSelected");
				this.SetAttributeValue("he_locationselected", value);
				this.OnPropertyChanged("he_LocationSelected");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("he_locationselectedname")]
		public string he_locationselectedName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("he_locationselected"))
				{
					return this.FormattedValues["he_locationselected"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("he_multifunctionalteaminvolved")]
		public virtual Microsoft.Xrm.Sdk.OptionSetValue he_MultifunctionalTeamInvolved
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("he_multifunctionalteaminvolved");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("he_MultifunctionalTeamInvolved");
				this.SetAttributeValue("he_multifunctionalteaminvolved", value);
				this.OnPropertyChanged("he_MultifunctionalTeamInvolved");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("he_multifunctionalteaminvolvedname")]
		public string he_multifunctionalteaminvolvedName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("he_multifunctionalteaminvolved"))
				{
					return this.FormattedValues["he_multifunctionalteaminvolved"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Contains Project Code from ESRI
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("he_name")]
		public string he_Name
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("he_name");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("he_Name");
				this.SetAttributeValue("he_name", value);
				this.OnPropertyChanged("he_Name");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("he_numberofhomes")]
		public System.Nullable<int> he_NumberOfHomes
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("he_numberofhomes");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("he_NumberOfHomes");
				this.SetAttributeValue("he_numberofhomes", value);
				this.OnPropertyChanged("he_NumberOfHomes");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("he_parentproject")]
		public Microsoft.Xrm.Sdk.EntityReference he_parentproject
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("he_parentproject");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("he_parentproject");
				this.SetAttributeValue("he_parentproject", value);
				this.OnPropertyChanged("he_parentproject");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("he_parentprojectname")]
		public string he_parentprojectName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("he_parentproject"))
				{
					return this.FormattedValues["he_parentproject"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("he_pasintegrationlastmessagereceiveddate")]
		public System.Nullable<System.DateTime> he_PASIntegrationLastMessageReceivedDate
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("he_pasintegrationlastmessagereceiveddate");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("he_PASIntegrationLastMessageReceivedDate");
				this.SetAttributeValue("he_pasintegrationlastmessagereceiveddate", value);
				this.OnPropertyChanged("he_PASIntegrationLastMessageReceivedDate");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("he_pasintegrationlastmessagereceivedstatus")]
		public string he_PASIntegrationLastMessageReceivedStatus
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("he_pasintegrationlastmessagereceivedstatus");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("he_PASIntegrationLastMessageReceivedStatus");
				this.SetAttributeValue("he_pasintegrationlastmessagereceivedstatus", value);
				this.OnPropertyChanged("he_PASIntegrationLastMessageReceivedStatus");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("he_pathway")]
		public virtual Microsoft.Xrm.Sdk.OptionSetValue he_Pathway
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("he_pathway");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("he_Pathway");
				this.SetAttributeValue("he_pathway", value);
				this.OnPropertyChanged("he_Pathway");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("he_pathwayname")]
		public string he_pathwayName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("he_pathway"))
				{
					return this.FormattedValues["he_pathway"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("he_pcsprojectidentifier")]
		public System.Nullable<int> he_PCSProjectIdentifier
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("he_pcsprojectidentifier");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("he_PCSProjectIdentifier");
				this.SetAttributeValue("he_pcsprojectidentifier", value);
				this.OnPropertyChanged("he_PCSProjectIdentifier");
			}
		}
		
		/// <summary>
		/// Don`t use this field any more. Use he_name field instead, please
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("he_pipelinecode")]
		public string he_PipelineCode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("he_pipelinecode");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("he_PipelineCode");
				this.SetAttributeValue("he_pipelinecode", value);
				this.OnPropertyChanged("he_PipelineCode");
			}
		}
		
		/// <summary>
		/// Unique identifier for entity instances
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("he_pipelineid")]
		public System.Nullable<System.Guid> he_PipelineId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("he_pipelineid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("he_PipelineId");
				this.SetAttributeValue("he_pipelineid", value);
				if (value.HasValue)
				{
					base.Id = value.Value;
				}
				else
				{
					base.Id = System.Guid.Empty;
				}
				this.OnPropertyChanged("he_PipelineId");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("he_pipelineid")]
		public override System.Guid Id
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return base.Id;
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.he_PipelineId = value;
			}
		}
		
		/// <summary>
		/// Select a planning stage
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("he_planningstageforintendeduse")]
		public virtual Microsoft.Xrm.Sdk.OptionSetValue he_PlanningStageforIntendedUse
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("he_planningstageforintendeduse");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("he_PlanningStageforIntendedUse");
				this.SetAttributeValue("he_planningstageforintendeduse", value);
				this.OnPropertyChanged("he_PlanningStageforIntendedUse");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("he_planningstageforintendedusename")]
		public string he_planningstageforintendeduseName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("he_planningstageforintendeduse"))
				{
					return this.FormattedValues["he_planningstageforintendeduse"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("he_portalowner")]
		public Microsoft.Xrm.Sdk.EntityReference he_portalowner
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("he_portalowner");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("he_portalowner");
				this.SetAttributeValue("he_portalowner", value);
				this.OnPropertyChanged("he_portalowner");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("he_portalownername")]
		public string he_portalownerName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("he_portalowner"))
				{
					return this.FormattedValues["he_portalowner"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("he_portalowneryominame")]
		public string he_portalownerYomiName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("he_portalowner"))
				{
					return this.FormattedValues["he_portalowner"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("he_postcode")]
		public string he_Postcode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("he_postcode");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("he_Postcode");
				this.SetAttributeValue("he_postcode", value);
				this.OnPropertyChanged("he_Postcode");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("he_previousresidentialbuildingexperience")]
		public System.Nullable<int> he_previousresidentialbuildingexperience
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("he_previousresidentialbuildingexperience");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("he_previousresidentialbuildingexperience");
				this.SetAttributeValue("he_previousresidentialbuildingexperience", value);
				this.OnPropertyChanged("he_previousresidentialbuildingexperience");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("he_projectbelocated")]
		public Microsoft.Xrm.Sdk.EntityReference he_projectbelocated
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("he_projectbelocated");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("he_projectbelocated");
				this.SetAttributeValue("he_projectbelocated", value);
				this.OnPropertyChanged("he_projectbelocated");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("he_projectbelocatedname")]
		public string he_projectbelocatedName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("he_projectbelocated"))
				{
					return this.FormattedValues["he_projectbelocated"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// This is usually based on location or opportunity
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("he_projectname")]
		public string he_ProjectName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("he_projectname");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("he_ProjectName");
				this.SetAttributeValue("he_projectname", value);
				this.OnPropertyChanged("he_ProjectName");
			}
		}
		
		/// <summary>
		/// Would your project progress more slowly or stall without Homes England support?
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("he_projectprogressmoreslowly")]
		public System.Nullable<bool> he_projectprogressmoreslowly
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("he_projectprogressmoreslowly");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("he_projectprogressmoreslowly");
				this.SetAttributeValue("he_projectprogressmoreslowly", value);
				this.OnPropertyChanged("he_projectprogressmoreslowly");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("he_projectprogressmoreslowlyname")]
		public string he_projectprogressmoreslowlyName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("he_projectprogressmoreslowly"))
				{
					return this.FormattedValues["he_projectprogressmoreslowly"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("he_projectstage")]
		public virtual Microsoft.Xrm.Sdk.OptionSetValue he_ProjectStage
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("he_projectstage");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("he_ProjectStage");
				this.SetAttributeValue("he_projectstage", value);
				this.OnPropertyChanged("he_ProjectStage");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("he_projectstagename")]
		public string he_projectstageName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("he_projectstage"))
				{
					return this.FormattedValues["he_projectstage"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("he_projecttype")]
		public virtual Microsoft.Xrm.Sdk.OptionSetValue he_Projecttype
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("he_projecttype");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("he_Projecttype");
				this.SetAttributeValue("he_projecttype", value);
				this.OnPropertyChanged("he_Projecttype");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("he_projecttypedescription")]
		public virtual Microsoft.Xrm.Sdk.OptionSetValue he_Projecttypedescription
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("he_projecttypedescription");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("he_Projecttypedescription");
				this.SetAttributeValue("he_projecttypedescription", value);
				this.OnPropertyChanged("he_Projecttypedescription");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("he_projecttypedescriptionname")]
		public string he_projecttypedescriptionName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("he_projecttypedescription"))
				{
					return this.FormattedValues["he_projecttypedescription"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("he_projecttypename")]
		public string he_projecttypeName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("he_projecttype"))
				{
					return this.FormattedValues["he_projecttype"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("he_projectyear")]
		public string he_projectyear
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("he_projectyear");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("he_projectyear");
				this.SetAttributeValue("he_projectyear", value);
				this.OnPropertyChanged("he_projectyear");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("he_proposedinterventions")]
		public virtual Microsoft.Xrm.Sdk.OptionSetValueCollection he_ProposedInterventions
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValueCollection>("he_proposedinterventions");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("he_ProposedInterventions");
				this.SetAttributeValue("he_proposedinterventions", value);
				this.OnPropertyChanged("he_ProposedInterventions");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("he_proposedinterventionsname")]
		public string he_proposedinterventionsName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("he_proposedinterventions"))
				{
					return this.FormattedValues["he_proposedinterventions"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("he_reasonforarchive")]
		public virtual Microsoft.Xrm.Sdk.OptionSetValue he_ReasonforArchive
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("he_reasonforarchive");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("he_ReasonforArchive");
				this.SetAttributeValue("he_reasonforarchive", value);
				this.OnPropertyChanged("he_ReasonforArchive");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("he_reasonforarchivename")]
		public string he_reasonforarchiveName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("he_reasonforarchive"))
				{
					return this.FormattedValues["he_reasonforarchive"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("he_reasonforhold")]
		public string he_Reasonforhold
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("he_reasonforhold");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("he_Reasonforhold");
				this.SetAttributeValue("he_reasonforhold", value);
				this.OnPropertyChanged("he_Reasonforhold");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("he_recordstatus")]
		public virtual Microsoft.Xrm.Sdk.OptionSetValue he_RecordStatus
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("he_recordstatus");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("he_RecordStatus");
				this.SetAttributeValue("he_recordstatus", value);
				this.OnPropertyChanged("he_RecordStatus");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("he_recordstatusname")]
		public string he_recordstatusName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("he_recordstatus"))
				{
					return this.FormattedValues["he_recordstatus"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("he_regionlocation")]
		public virtual Microsoft.Xrm.Sdk.OptionSetValueCollection he_regionlocation
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValueCollection>("he_regionlocation");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("he_regionlocation");
				this.SetAttributeValue("he_regionlocation", value);
				this.OnPropertyChanged("he_regionlocation");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("he_regionlocationname")]
		public string he_regionlocationName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("he_regionlocation"))
				{
					return this.FormattedValues["he_regionlocation"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// The name of the staff member who is driving the lead forward
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("he_sponsorname")]
		public Microsoft.Xrm.Sdk.EntityReference he_SponsorName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("he_sponsorname");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("he_SponsorName");
				this.SetAttributeValue("he_sponsorname", value);
				this.OnPropertyChanged("he_SponsorName");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("he_sponsornamename")]
		public string he_SponsorNameName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("he_sponsorname"))
				{
					return this.FormattedValues["he_sponsorname"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("he_sponsornameyominame")]
		public string he_SponsorNameYomiName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("he_sponsorname"))
				{
					return this.FormattedValues["he_sponsorname"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("he_startofprojectmonth")]
		public System.Nullable<int> he_startofprojectmonth
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("he_startofprojectmonth");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("he_startofprojectmonth");
				this.SetAttributeValue("he_startofprojectmonth", value);
				this.OnPropertyChanged("he_startofprojectmonth");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("he_startofprojectyear")]
		public System.Nullable<int> he_startofprojectyear
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("he_startofprojectyear");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("he_startofprojectyear");
				this.SetAttributeValue("he_startofprojectyear", value);
				this.OnPropertyChanged("he_startofprojectyear");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("he_substantiveowner")]
		public Microsoft.Xrm.Sdk.EntityReference he_substantiveowner
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("he_substantiveowner");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("he_substantiveowner");
				this.SetAttributeValue("he_substantiveowner", value);
				this.OnPropertyChanged("he_substantiveowner");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("he_substantiveownername")]
		public string he_substantiveownerName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("he_substantiveowner"))
				{
					return this.FormattedValues["he_substantiveowner"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("he_substantiveowneryominame")]
		public string he_substantiveownerYomiName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("he_substantiveowner"))
				{
					return this.FormattedValues["he_substantiveowner"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("he_uprnumber")]
		public string he_UPRNumber
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("he_uprnumber");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("he_UPRNumber");
				this.SetAttributeValue("he_uprnumber", value);
				this.OnPropertyChanged("he_UPRNumber");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("he_url")]
		public string he_URL
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("he_url");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("he_URL");
				this.SetAttributeValue("he_url", value);
				this.OnPropertyChanged("he_URL");
			}
		}
		
		/// <summary>
		/// Will funding include a mix of financial transaction/Non financial transaction?
///(FT /Non FT Spend Mix)
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("he_whatfundinginclude")]
		public virtual Microsoft.Xrm.Sdk.OptionSetValue he_WhatFundingInclude
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("he_whatfundinginclude");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("he_WhatFundingInclude");
				this.SetAttributeValue("he_whatfundinginclude", value);
				this.OnPropertyChanged("he_WhatFundingInclude");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("he_whatfundingincludename")]
		public string he_whatfundingincludeName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("he_whatfundinginclude"))
				{
					return this.FormattedValues["he_whatfundinginclude"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("he_whatisthegeographicfocusoftheproject")]
		public virtual Microsoft.Xrm.Sdk.OptionSetValue he_whatisthegeographicfocusoftheproject
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("he_whatisthegeographicfocusoftheproject");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("he_whatisthegeographicfocusoftheproject");
				this.SetAttributeValue("he_whatisthegeographicfocusoftheproject", value);
				this.OnPropertyChanged("he_whatisthegeographicfocusoftheproject");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("he_whatisthegeographicfocusoftheprojectname")]
		public string he_whatisthegeographicfocusoftheprojectName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("he_whatisthegeographicfocusoftheproject"))
				{
					return this.FormattedValues["he_whatisthegeographicfocusoftheproject"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Sequence number of the import that created this record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("importsequencenumber")]
		public System.Nullable<int> ImportSequenceNumber
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("importsequencenumber");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("ImportSequenceNumber");
				this.SetAttributeValue("importsequencenumber", value);
				this.OnPropertyChanged("ImportSequenceNumber");
			}
		}
		
		/// <summary>
		/// Unique identifier of the user who modified the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedby")]
		public Microsoft.Xrm.Sdk.EntityReference ModifiedBy
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedby");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedbyname")]
		public string ModifiedByName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("modifiedby"))
				{
					return this.FormattedValues["modifiedby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedbyyominame")]
		public string ModifiedByYomiName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("modifiedby"))
				{
					return this.FormattedValues["modifiedby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Date and time when the record was modified.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedon")]
		public System.Nullable<System.DateTime> ModifiedOn
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("modifiedon");
			}
		}
		
		/// <summary>
		/// Unique identifier of the delegate user who modified the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfby")]
		public Microsoft.Xrm.Sdk.EntityReference ModifiedOnBehalfBy
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedonbehalfby");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("ModifiedOnBehalfBy");
				this.SetAttributeValue("modifiedonbehalfby", value);
				this.OnPropertyChanged("ModifiedOnBehalfBy");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfbyname")]
		public string ModifiedOnBehalfByName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("modifiedonbehalfby"))
				{
					return this.FormattedValues["modifiedonbehalfby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfbyyominame")]
		public string ModifiedOnBehalfByYomiName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("modifiedonbehalfby"))
				{
					return this.FormattedValues["modifiedonbehalfby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Date and time that the record was migrated.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("overriddencreatedon")]
		public System.Nullable<System.DateTime> OverriddenCreatedOn
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("overriddencreatedon");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("OverriddenCreatedOn");
				this.SetAttributeValue("overriddencreatedon", value);
				this.OnPropertyChanged("OverriddenCreatedOn");
			}
		}
		
		/// <summary>
		/// Owner Id
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ownerid")]
		public Microsoft.Xrm.Sdk.EntityReference OwnerId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ownerid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("OwnerId");
				this.SetAttributeValue("ownerid", value);
				this.OnPropertyChanged("OwnerId");
			}
		}
		
		/// <summary>
		/// Name of the owner
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owneridname")]
		public string OwnerIdName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ownerid"))
				{
					return this.FormattedValues["ownerid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Yomi name of the owner
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owneridyominame")]
		public string OwnerIdYomiName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ownerid"))
				{
					return this.FormattedValues["ownerid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Unique identifier for the business unit that owns the record
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunit")]
		public Microsoft.Xrm.Sdk.EntityReference OwningBusinessUnit
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningbusinessunit");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("OwningBusinessUnit");
				this.SetAttributeValue("owningbusinessunit", value);
				this.OnPropertyChanged("OwningBusinessUnit");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunitname")]
		public string OwningBusinessUnitName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("owningbusinessunit"))
				{
					return this.FormattedValues["owningbusinessunit"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Unique identifier for the team that owns the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningteam")]
		public Microsoft.Xrm.Sdk.EntityReference OwningTeam
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningteam");
			}
		}
		
		/// <summary>
		/// Unique identifier for the user that owns the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owninguser")]
		public Microsoft.Xrm.Sdk.EntityReference OwningUser
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owninguser");
			}
		}
		
		/// <summary>
		/// Contains the id of the process associated with the entity.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("processid")]
		public System.Nullable<System.Guid> processid
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("processid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("processid");
				this.SetAttributeValue("processid", value);
				this.OnPropertyChanged("processid");
			}
		}
		
		/// <summary>
		/// Contains the id of the stage where the entity is located.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("stageid")]
		public System.Nullable<System.Guid> stageid
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("stageid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("stageid");
				this.SetAttributeValue("stageid", value);
				this.OnPropertyChanged("stageid");
			}
		}
		
		/// <summary>
		/// Status of the Pipeline
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statecode")]
		public virtual Microsoft.Xrm.Sdk.OptionSetValue StateCode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("statecode");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("StateCode");
				this.SetAttributeValue("statecode", value);
				this.OnPropertyChanged("StateCode");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statecodename")]
		public string statecodeName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("statecode"))
				{
					return this.FormattedValues["statecode"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Reason for the status of the Project record
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statuscode")]
		public virtual Microsoft.Xrm.Sdk.OptionSetValue StatusCode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("statuscode");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("StatusCode");
				this.SetAttributeValue("statuscode", value);
				this.OnPropertyChanged("StatusCode");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statuscodename")]
		public string statuscodeName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("statuscode"))
				{
					return this.FormattedValues["statuscode"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// For internal use only.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("timezoneruleversionnumber")]
		public System.Nullable<int> TimeZoneRuleVersionNumber
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("timezoneruleversionnumber");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("TimeZoneRuleVersionNumber");
				this.SetAttributeValue("timezoneruleversionnumber", value);
				this.OnPropertyChanged("TimeZoneRuleVersionNumber");
			}
		}
		
		/// <summary>
		/// Unique identifier of the currency associated with the entity.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("transactioncurrencyid")]
		public Microsoft.Xrm.Sdk.EntityReference TransactionCurrencyId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("transactioncurrencyid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("TransactionCurrencyId");
				this.SetAttributeValue("transactioncurrencyid", value);
				this.OnPropertyChanged("TransactionCurrencyId");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("transactioncurrencyidname")]
		public string TransactionCurrencyIdName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("transactioncurrencyid"))
				{
					return this.FormattedValues["transactioncurrencyid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// A comma separated list of string values representing the unique identifiers of stages in a Business Process Flow Instance in the order that they occur.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("traversedpath")]
		public string traversedpath
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("traversedpath");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("traversedpath");
				this.SetAttributeValue("traversedpath", value);
				this.OnPropertyChanged("traversedpath");
			}
		}
		
		/// <summary>
		/// Time zone code that was in use when the record was created.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("utcconversiontimezonecode")]
		public System.Nullable<int> UTCConversionTimeZoneCode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("utcconversiontimezonecode");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("UTCConversionTimeZoneCode");
				this.SetAttributeValue("utcconversiontimezonecode", value);
				this.OnPropertyChanged("UTCConversionTimeZoneCode");
			}
		}
		
		/// <summary>
		/// Version Number
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("versionnumber")]
		public System.Nullable<long> VersionNumber
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<long>>("versionnumber");
			}
		}
		
		/// <summary>
		/// 1:N he_he_projectlocalauthority_Project_he_pipel
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("he_he_projectlocalauthority_Project_he_pipel")]
		public System.Collections.Generic.IEnumerable<DataverseModel.he_ProjectLocalAuthority> he_he_projectlocalauthority_Project_he_pipel
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<DataverseModel.he_ProjectLocalAuthority>("he_he_projectlocalauthority_Project_he_pipel", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("he_he_projectlocalauthority_Project_he_pipel");
				this.SetRelatedEntities<DataverseModel.he_ProjectLocalAuthority>("he_he_projectlocalauthority_Project_he_pipel", null, value);
				this.OnPropertyChanged("he_he_projectlocalauthority_Project_he_pipel");
			}
		}
		
		/// <summary>
		/// 1:N he_pipeline_SharePointDocumentLocations
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("he_pipeline_SharePointDocumentLocations")]
		public System.Collections.Generic.IEnumerable<DataverseModel.SharePointDocumentLocation> he_pipeline_SharePointDocumentLocations
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<DataverseModel.SharePointDocumentLocation>("he_pipeline_SharePointDocumentLocations", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("he_pipeline_SharePointDocumentLocations");
				this.SetRelatedEntities<DataverseModel.SharePointDocumentLocation>("he_pipeline_SharePointDocumentLocations", null, value);
				this.OnPropertyChanged("he_pipeline_SharePointDocumentLocations");
			}
		}
		
		/// <summary>
		/// 1:N he_pipeline_Teams
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("he_pipeline_Teams")]
		public System.Collections.Generic.IEnumerable<DataverseModel.Team> he_pipeline_Teams
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<DataverseModel.Team>("he_pipeline_Teams", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("he_pipeline_Teams");
				this.SetRelatedEntities<DataverseModel.Team>("he_pipeline_Teams", null, value);
				this.OnPropertyChanged("he_pipeline_Teams");
			}
		}
		
		/// <summary>
		/// 1:N he_strategic_parentproject_he_Pipeline
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("he_strategic_parentproject_he_Pipeline", Microsoft.Xrm.Sdk.EntityRole.Referenced)]
		public System.Collections.Generic.IEnumerable<DataverseModel.he_Pipeline> Referencedhe_strategic_parentproject_he_Pipeline
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<DataverseModel.he_Pipeline>("he_strategic_parentproject_he_Pipeline", Microsoft.Xrm.Sdk.EntityRole.Referenced);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("Referencedhe_strategic_parentproject_he_Pipeline");
				this.SetRelatedEntities<DataverseModel.he_Pipeline>("he_strategic_parentproject_he_Pipeline", Microsoft.Xrm.Sdk.EntityRole.Referenced, value);
				this.OnPropertyChanged("Referencedhe_strategic_parentproject_he_Pipeline");
			}
		}
		
		/// <summary>
		/// 1:N invln_loanapplication_HeProjectId_he_pipeline
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("invln_loanapplication_HeProjectId_he_pipeline")]
		public System.Collections.Generic.IEnumerable<DataverseModel.invln_Loanapplication> invln_loanapplication_HeProjectId_he_pipeline
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<DataverseModel.invln_Loanapplication>("invln_loanapplication_HeProjectId_he_pipeline", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("invln_loanapplication_HeProjectId_he_pipeline");
				this.SetRelatedEntities<DataverseModel.invln_Loanapplication>("invln_loanapplication_HeProjectId_he_pipeline", null, value);
				this.OnPropertyChanged("invln_loanapplication_HeProjectId_he_pipeline");
			}
		}
		
		/// <summary>
		/// N:N he_StrategicProject_ChildProject
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("he_StrategicProject_ChildProject", Microsoft.Xrm.Sdk.EntityRole.Referencing)]
		public System.Collections.Generic.IEnumerable<DataverseModel.he_Pipeline> Referencinghe_StrategicProject_ChildProject
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<DataverseModel.he_Pipeline>("he_StrategicProject_ChildProject", Microsoft.Xrm.Sdk.EntityRole.Referencing);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("Referencinghe_StrategicProject_ChildProject");
				this.SetRelatedEntities<DataverseModel.he_Pipeline>("he_StrategicProject_ChildProject", Microsoft.Xrm.Sdk.EntityRole.Referencing, value);
				this.OnPropertyChanged("Referencinghe_StrategicProject_ChildProject");
			}
		}
		
		/// <summary>
		/// N:N he_StrategicProject_ChildProject
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("he_StrategicProject_ChildProject", Microsoft.Xrm.Sdk.EntityRole.Referenced)]
		public System.Collections.Generic.IEnumerable<DataverseModel.he_Pipeline> Referencedhe_StrategicProject_ChildProject
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<DataverseModel.he_Pipeline>("he_StrategicProject_ChildProject", Microsoft.Xrm.Sdk.EntityRole.Referenced);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("Referencedhe_StrategicProject_ChildProject");
				this.SetRelatedEntities<DataverseModel.he_Pipeline>("he_StrategicProject_ChildProject", Microsoft.Xrm.Sdk.EntityRole.Referenced, value);
				this.OnPropertyChanged("Referencedhe_StrategicProject_ChildProject");
			}
		}
		
		/// <summary>
		/// N:1 he_Account_Account_he_Pipeline
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("he_account")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("he_Account_Account_he_Pipeline")]
		public DataverseModel.Account he_Account_Account_he_Pipeline
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<DataverseModel.Account>("he_Account_Account_he_Pipeline", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("he_Account_Account_he_Pipeline");
				this.SetRelatedEntity<DataverseModel.Account>("he_Account_Account_he_Pipeline", null, value);
				this.OnPropertyChanged("he_Account_Account_he_Pipeline");
			}
		}
		
		/// <summary>
		/// N:1 he_he_pipeline_LeadIntervention_systemuser
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("he_leadintervention")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("he_he_pipeline_LeadIntervention_systemuser")]
		public DataverseModel.SystemUser he_he_pipeline_LeadIntervention_systemuser
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<DataverseModel.SystemUser>("he_he_pipeline_LeadIntervention_systemuser", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("he_he_pipeline_LeadIntervention_systemuser");
				this.SetRelatedEntity<DataverseModel.SystemUser>("he_he_pipeline_LeadIntervention_systemuser", null, value);
				this.OnPropertyChanged("he_he_pipeline_LeadIntervention_systemuser");
			}
		}
		
		/// <summary>
		/// N:1 he_he_pipeline_SponsorName_systemuser
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("he_sponsorname")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("he_he_pipeline_SponsorName_systemuser")]
		public DataverseModel.SystemUser he_he_pipeline_SponsorName_systemuser
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<DataverseModel.SystemUser>("he_he_pipeline_SponsorName_systemuser", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("he_he_pipeline_SponsorName_systemuser");
				this.SetRelatedEntity<DataverseModel.SystemUser>("he_he_pipeline_SponsorName_systemuser", null, value);
				this.OnPropertyChanged("he_he_pipeline_SponsorName_systemuser");
			}
		}
		
		/// <summary>
		/// N:1 he_pipeline_portalowner_contact
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("he_portalowner")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("he_pipeline_portalowner_contact")]
		public DataverseModel.Contact he_pipeline_portalowner_contact
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<DataverseModel.Contact>("he_pipeline_portalowner_contact", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("he_pipeline_portalowner_contact");
				this.SetRelatedEntity<DataverseModel.Contact>("he_pipeline_portalowner_contact", null, value);
				this.OnPropertyChanged("he_pipeline_portalowner_contact");
			}
		}
		
		/// <summary>
		/// N:1 he_pipeline_projectbelocated_he_localauthori
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("he_projectbelocated")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("he_pipeline_projectbelocated_he_localauthori")]
		public DataverseModel.he_LocalAuthority he_pipeline_projectbelocated_he_localauthori
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<DataverseModel.he_LocalAuthority>("he_pipeline_projectbelocated_he_localauthori", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("he_pipeline_projectbelocated_he_localauthori");
				this.SetRelatedEntity<DataverseModel.he_LocalAuthority>("he_pipeline_projectbelocated_he_localauthori", null, value);
				this.OnPropertyChanged("he_pipeline_projectbelocated_he_localauthori");
			}
		}
		
		/// <summary>
		/// N:1 he_pipeline_substantiveowner_systemuser
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("he_substantiveowner")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("he_pipeline_substantiveowner_systemuser")]
		public DataverseModel.SystemUser he_pipeline_substantiveowner_systemuser
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<DataverseModel.SystemUser>("he_pipeline_substantiveowner_systemuser", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("he_pipeline_substantiveowner_systemuser");
				this.SetRelatedEntity<DataverseModel.SystemUser>("he_pipeline_substantiveowner_systemuser", null, value);
				this.OnPropertyChanged("he_pipeline_substantiveowner_systemuser");
			}
		}
		
		/// <summary>
		/// N:1 he_strategic_parentproject_he_Pipeline
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("he_parentproject")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("he_strategic_parentproject_he_Pipeline", Microsoft.Xrm.Sdk.EntityRole.Referencing)]
		public DataverseModel.he_Pipeline Referencinghe_strategic_parentproject_he_Pipeline
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<DataverseModel.he_Pipeline>("he_strategic_parentproject_he_Pipeline", Microsoft.Xrm.Sdk.EntityRole.Referencing);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("Referencinghe_strategic_parentproject_he_Pipeline");
				this.SetRelatedEntity<DataverseModel.he_Pipeline>("he_strategic_parentproject_he_Pipeline", Microsoft.Xrm.Sdk.EntityRole.Referencing, value);
				this.OnPropertyChanged("Referencinghe_strategic_parentproject_he_Pipeline");
			}
		}
		
		/// <summary>
		/// N:1 lk_he_pipeline_createdby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_he_pipeline_createdby")]
		public DataverseModel.SystemUser lk_he_pipeline_createdby
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<DataverseModel.SystemUser>("lk_he_pipeline_createdby", null);
			}
		}
		
		/// <summary>
		/// N:1 lk_he_pipeline_createdonbehalfby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_he_pipeline_createdonbehalfby")]
		public DataverseModel.SystemUser lk_he_pipeline_createdonbehalfby
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<DataverseModel.SystemUser>("lk_he_pipeline_createdonbehalfby", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("lk_he_pipeline_createdonbehalfby");
				this.SetRelatedEntity<DataverseModel.SystemUser>("lk_he_pipeline_createdonbehalfby", null, value);
				this.OnPropertyChanged("lk_he_pipeline_createdonbehalfby");
			}
		}
		
		/// <summary>
		/// N:1 lk_he_pipeline_modifiedby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_he_pipeline_modifiedby")]
		public DataverseModel.SystemUser lk_he_pipeline_modifiedby
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<DataverseModel.SystemUser>("lk_he_pipeline_modifiedby", null);
			}
		}
		
		/// <summary>
		/// N:1 lk_he_pipeline_modifiedonbehalfby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_he_pipeline_modifiedonbehalfby")]
		public DataverseModel.SystemUser lk_he_pipeline_modifiedonbehalfby
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<DataverseModel.SystemUser>("lk_he_pipeline_modifiedonbehalfby", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("lk_he_pipeline_modifiedonbehalfby");
				this.SetRelatedEntity<DataverseModel.SystemUser>("lk_he_pipeline_modifiedonbehalfby", null, value);
				this.OnPropertyChanged("lk_he_pipeline_modifiedonbehalfby");
			}
		}
		
		/// <summary>
		/// N:1 team_he_pipeline
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningteam")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_he_pipeline")]
		public DataverseModel.Team team_he_pipeline
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<DataverseModel.Team>("team_he_pipeline", null);
			}
		}
		
		/// <summary>
		/// N:1 user_he_pipeline
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owninguser")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("user_he_pipeline")]
		public DataverseModel.SystemUser user_he_pipeline
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<DataverseModel.SystemUser>("user_he_pipeline", null);
			}
		}
		
		/// <summary>
		/// Constructor for populating via LINQ queries given a LINQ anonymous type
		/// <param name="anonymousType">LINQ anonymous type.</param>
		/// </summary>
		[System.Diagnostics.DebuggerNonUserCode()]
		public he_Pipeline(object anonymousType) : 
				this()
		{
            foreach (var p in anonymousType.GetType().GetProperties())
            {
                var value = p.GetValue(anonymousType, null);
                var name = p.Name.ToLower();
            
                if (name.EndsWith("enum") && value.GetType().BaseType == typeof(System.Enum))
                {
                    value = new Microsoft.Xrm.Sdk.OptionSetValue((int) value);
                    name = name.Remove(name.Length - "enum".Length);
                }
            
                switch (name)
                {
                    case "id":
                        base.Id = (System.Guid)value;
                        Attributes["he_pipelineid"] = base.Id;
                        break;
                    case "he_pipelineid":
                        var id = (System.Nullable<System.Guid>) value;
                        if(id == null){ continue; }
                        base.Id = id.Value;
                        Attributes[name] = base.Id;
                        break;
                    case "formattedvalues":
                        // Add Support for FormattedValues
                        FormattedValues.AddRange((Microsoft.Xrm.Sdk.FormattedValueCollection)value);
                        break;
                    default:
                        Attributes[name] = value;
                        break;
                }
            }
		}
	}
}
#pragma warning restore CS1591
